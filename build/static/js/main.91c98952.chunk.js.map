{"version":3,"sources":["app/core/context-provider/loading-overlay/loading-overlay-context.ts","app/core/context-provider/loading-overlay/loading-overlay-provider.tsx","app/core/context-provider/user/user-context.ts","environment.ts","app/core/utils/wallet.ts","app/core/utils/notification.util.ts","app/core/utils/network/user.ts","app/core/context-provider/user/user-provider.tsx","app/component/favorite-button.tsx","app/component/hot-item-slider.tsx","app/component/nft-card.tsx","app/component/drop-slider.tsx","app/component/recently-view.tsx","app/core/data/hot-item-data.ts","app/pages/home-page/home-page.tsx","app/component/canvas.tsx","app/core/data/web3-abi-address/abi.ts","app/core/data/web3-abi-address/address.ts","app/core/data/ether-unit.ts","app/component/catalog-card.tsx","app/core/utils/network/catalog.ts","app/core/data/basic-images.ts","app/pages/catalog-page/catalog-page.tsx","app/pages/news-page/news-page.tsx","app/pages/your-profile-page/profile-page.tsx","app/core/data/routes.ts","app/component/collection-item-slider.tsx","app/pages/collection-page/collection-page.tsx","app/component/uploadIcon.tsx","app/pages/create-collection-page/create-collection-page.tsx","app/core/utils/network/penguin.ts","app/pages/mint-nft-page/mint-nft-page.tsx","app/core/enum/sell-type.ts","app/core/utils/category.ts","app/layout/header/header.tsx","app/layout/layout.tsx","app/component/nft-item-slider.tsx","app/pages/nft-page/nft-page.tsx","app/pages/favorite-page/favorite-page.tsx","app/core/utils/network/nft-detail.ts","app/core/utils/network/time.ts","app/pages/nft-detail-page/nft-detail-page.tsx","app/pages/doc-page/doc-page.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoadingOverlayContext","createContext","isActivity","overlayText","setIsActivity","setOverlayText","useOverlay","useContext","LoadingOverlayProvider","props","useState","Provider","value","children","UserContext","walletAddress","setWalletAddress","address","token","setToken","connectWallet","useUser","environment","lengthOfAddress","setLocalStorageWalletStatus","a","window","localStorage","setItem","getLocalStorageWalletAddress","getItem","reduceTheWalletAddress","undefined","length","substring","toast","type","message","store","addNotification","title","insert","container","animationIn","animationOut","dismiss","duration","onScreen","bscNetworkChainId","isEthNetwork","ethereum","request","method","toLocaleUpperCase","login","data","fetch","headers","body","JSON","stringify","then","handleResponse","response","json","UserProvider","handleAccountsChanged","accounts","result","accessToken","catch","err","code","on","FavoriteButton","isFavoritePage","favorite","setFavorite","className","style","backgroundColor","onClick","xmlns","stroke","width","height","viewBox","d","fill","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","HotItemSlider","hotIemSlider","hotItems","slickPrev","Icon","name","size","slickNext","ref","c","infinite","slidesToShow","speed","dots","arrows","map","item","index","to","pathname","state","nftId","nftName","src","alt","category","NftCard","key","DropSlider","newDropSlider","RecentlyView","recentlyViewData","hotItemData","imageSrc","creator","isFavorite","recentData","HomePage","recent","Canvas","penguin","canvasRef","useRef","isLoading","setIsLoading","useEffect","drawPenguinImage","keys","images","i","loadImage","image","push","canvas","current","ctx","getContext","drawImage","harmonyPenguinAbi","erc721Abi","escrowAbi","treasuryAbi","escrowAddress","treasuryAddress","harmonyPenguinAddress","ethUnit","CatalogCard","penguinData","setPenguinData","isModalShow","setIsModalShow","isSaleForMode","setIsSaleForMode","price","setPrice","harmonyPenguinContract","Web3","eth","Contract","isForSale","Card","CardBody","CardTitle","tag","tokenId","CardText","numberOfTransfers","mintedBy","currentOwner","toUpperCase","Button","disabled","methods","buyToken","send","from","BigNumber","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","check","Input","placeholder","onChange","e","Number","target","Label","checked","toggleForSale","ModalFooter","color","changeTokenPrice","catalogFilterPenguin","filterData","backgrounds","clothes","eyes","glasses","hairs","hats","mouths","necks","random_objects","skins","countOnDisplay","CatalogPage","background","skin","eye","mouth","cloth","glass","hair","hat","neck","random_object","setPenguin","offset","limit","setFilterData","path","pageCount","setPageCount","penguins","setPenguins","parseInt","String","id","label","replace","Pagination","count","variant","shape","event","NewsPage","ProfilePage","initialUserData","userName","logoImageName","logoImage","favoriteNFTs","logoUrl","setLogoUrl","user","setUser","getUserByWalletAddress","uploadProfile","FormData","append","uploadUser","console","log","minHeight","opacity","accept","files","URL","createObjectURL","selectLogoImage","ROUTES","CollectionItemSlider","CollectionPage","activeClassName","UploadIcon","CreateCollectionPage","setLoadImage","setUploadFile","selectFile","require","Buffer","SellType","MintNftPage","create","host","port","protocol","generatedPenguin","setGeneratedPenguin","metaWeb3","loadPenguinFromDb","isMinted","mintPenguin","penguinString","tokenPrice","toString","multipliedBy","tokenURI","arrNftCategories","truncateToDecimals","num","dec","calcDec","Math","pow","trunc","Header","concat","keyWord","loadWallet","mainPages","route","page","Layout","active","spinner","NftItemSlider","NftPage","FavoritePage","arrFavoriteNft","priceRange","setPriceRange","categories","setCategories","Slider","newValue","valueLabelDisplay","aria-labelledby","FormControlLabel","control","Checkbox","updateSellTypeOfNFT","sellType","updateOwnerOfNFT","owner","addOrRemoveFavorite","status","formatTime","time","hours","floor","minutes","seconds","NftDetailPage","royalty","description","nftFileName","nftFile","countOfFavorites","nftItem","setNftItem","isOwner","setIsOwner","countOfUsers","setSellType","bidPrice","setBidPrice","auctionDuration","setAuctionDuration","web3","ropstenWeb3","providers","HttpProvider","param","match","params","nft","loadSellTypeOfNFT","intervalId","setInterval","clearInterval","escrowContract","treasuryContract","tokenStatus","call","Auction","getFinalPrice","finalPrice","currentTime","Date","remainingTime","getTime","labelPlacement","icon","FavoriteBorder","checkedIcon","Favorite","None","setOnAuction","error","setOnSale","Sell","cancelOnSale","finishAuction","onTokenBuy","parseFloat","bidOnAuction","onTokenBid","DocPage","App","switchNetwork","chainId","chainName","rpcUrl","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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AAwB,CACjC,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAGSC,GAAoB,CAC7B,GACA,yBACA,uBACA,qBACA,yBACA,yBACA,2BACA,wBACA,wBACA,6BACA,4BACA,sBACA,yBACA,4BACA,6BACA,yBAGSC,GAAiB,CAC1B,gBACA,oBACA,iBACA,oBACA,iBACA,iBACA,kBACA,mBACA,sBACA,iBAGSC,GAAoB,CAC7B,GACA,oBACA,oBACA,mBACA,sBACA,uBACA,mBACA,qBACA,uBACA,qBACA,qBACA,qBAGSC,GAAkB,CAC3B,GACA,gBACA,uBACA,sBACA,oBAGSC,GAAiB,CAC1B,GACA,mBACA,mBACA,iBACA,sBACA,eACA,mBACA,kBACA,0BACA,uBACA,uBACA,sBACA,qBACA,oBACA,uBACA,oBACA,kBACA,mBACA,mBAGSC,GAAmB,CAC5B,kBACA,mBACA,mBACA,iBACA,mBAGSC,GAAkB,CAC3B,GACA,uBACA,sBACA,sBACA,qBACA,qBACA,iBACA,uBAGSC,GAA2B,CACpC,GACA,mBACA,uBACA,wBACA,wBACA,wBAGSC,GAAkB,CAC3B,iBACA,gBACA,iBACA,oBACA,kBACA,gBACA,sBACA,kBACA,gBACA,mBC9HSC,I,OAAyB,IAMzBC,GAAc,SAACxN,GAAyB,IAAD,EAENH,IAAlCF,EAFwC,EAExCA,cAAeC,EAFyB,EAEzBA,eAFyB,EAIlBK,mBAAkB,CAC5CwN,WAAY,GACZC,KAAM,GACNC,IAAK,GACLC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,cAAe,KAd6B,mBAIzCnG,EAJyC,KAIhCoG,EAJgC,OAgBZlO,mBAAiB,CACjD8H,QAASA,EACTqG,OAAQ,EACRC,MAAOd,KAnBqC,mBAgBzCX,EAhByC,KAgB7B0B,EAhB6B,KAqB1CC,E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","file":"static/js/main.91c98952.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nexport type LoadingOverLayType = {\r\n  isActivity: boolean,\r\n  overlayText: string\r\n  setIsActivity: (isActivity: boolean) => void;\r\n  setOverlayText: (overlayText: string) => void;\r\n}\r\n\r\nexport const LoadingOverlayContext = createContext<LoadingOverLayType>({\r\n  isActivity: false,\r\n  overlayText: '',\r\n  setIsActivity: (isActivity: boolean) => {},\r\n  setOverlayText: (overlayText: string) => {},\r\n});\r\n\r\nexport const useOverlay = () => useContext(LoadingOverlayContext);","import React, { useState } from 'react';\r\n\r\nimport { LoadingOverlayContext } from './loading-overlay-context';\r\n\r\nexport const LoadingOverlayProvider = (props: React.PropsWithChildren<{}>) => {\r\n\r\n  const [isActivity, setIsActivity] = useState<boolean>(false);\r\n  const [overlayText, setOverlayText] = useState<string>('');\r\n\r\n  return (\r\n    <LoadingOverlayContext.Provider value={{\r\n        isActivity: isActivity,\r\n        overlayText: overlayText,\r\n        setIsActivity: setIsActivity,\r\n        setOverlayText: setOverlayText,\r\n    }}>\r\n      { props.children }\r\n    </LoadingOverlayContext.Provider>\r\n  );\r\n\r\n}\r\n","\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport type UserContextType = {\r\n  walletAddress: string,\r\n  setWalletAddress: (address: string) => void;\r\n  token: string,\r\n  setToken: (token: string) => void;\r\n  connectWallet: () => void;\r\n}\r\n\r\nexport const UserContext = createContext<UserContextType>({\r\n  walletAddress: '',\r\n  setWalletAddress: (address: string) => {},\r\n  token: 'string',\r\n  setToken: (token: string) => {},\r\n  connectWallet: () => {},\r\n});\r\n\r\nexport const useUser = () => useContext(UserContext);\r\n","export const environment = {\r\n  baseUrl: 'http://localhost:3001/',\r\n  serverUrl: 'https://harmony-penguin-backend.herokuapp.com/api',\r\n  // serverUrl: 'http://localhost:3000/api',\r\n  // serverUrl: 'https://currentnft-backend.herokuapp.com/api',\r\n  bscNetworkUrl: 'https://bsc-dataseed1.defibit.io',\r\n  ropstenNetworkUrl: 'https://api.s0.b.hmny.io',\r\n  localStorageKeys: {\r\n    walletAddress: 'user-address'\r\n  }\r\n}","import { environment } from '../../../environment';\r\n\r\nexport const lengthOfAddress = 42;\r\n\r\nexport async function setLocalStorageWalletStatus(address: string): Promise<void> {\r\n  await window.localStorage.setItem(environment.localStorageKeys.walletAddress, address);\r\n}\r\n\r\nexport function getLocalStorageWalletAddress(): string {\r\n  const address = window.localStorage.getItem(environment.localStorageKeys.walletAddress);\r\n  return address || '';\r\n}\r\n\r\nexport function reduceTheWalletAddress(walletAddress: string | undefined): string {\r\n  if(walletAddress === undefined) {\r\n    return '';\r\n  }\r\n  if(walletAddress.length !== lengthOfAddress){\r\n    return '';\r\n  }\r\n  const reducedAddress = walletAddress ? `${walletAddress.substring(0, 4)  }...${  walletAddress.substring(walletAddress.length - 4)}` : '';\r\n  return reducedAddress;\r\n}\r\n","import { store } from 'react-notifications-component';\r\nimport { MessageType } from '../enum/notification';\r\n\r\nexport function toast(type: any, message: string): void {\r\n\r\n  store.addNotification({\r\n    title: '',\r\n    message,\r\n    type: type,\r\n    insert: 'top',\r\n    container: 'top-right',\r\n    animationIn: ['animate__animated', 'animate__fadeIn'],\r\n    animationOut: ['animate__animated', 'animate__fadeOut'],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onScreen: true\r\n    }\r\n  });\r\n}\r\n\r\n","import { toast } from '../notification.util';\r\nimport { environment } from '../../../../environment';\r\nimport { NFT } from '../../models/nft';\r\nimport { User } from '../../models/user';\r\n\r\nexport const bscNetworkChainId = '0x6357d2e0';\r\n// const bscNetworkChainId = '0x61';\r\n\r\nexport const isEthNetwork = async () => {\r\n    const { ethereum } = window;\r\n    if(!ethereum) {\r\n        return;\r\n    }\r\n    const chainId = await ethereum.request({ method: 'eth_chainId' });\r\n    if (chainId.toLocaleUpperCase() !== bscNetworkChainId.toLocaleUpperCase()) {\r\n        toast('danger', 'Please select network of MetaMask as \"Harmony Test Network\"');\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nexport function login(walletAddress: string) {\r\n    const data = { walletAddress: walletAddress };\r\n    return fetch(`${ environment.serverUrl }/auth/login`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function uploadUser(user: User) {\r\n    const data = new FormData();\r\n    data.append( 'userName', user.userName );\r\n    data.append( 'walletAddress', user.walletAddress );\r\n    if(user.logoImage != null) {\r\n        data.append( 'logoImage', user.logoImage );\r\n    } else {\r\n        data.append( 'logoImage', '' );\r\n    }\r\n    return fetch(`${ environment.serverUrl }/user/updateProfile`, {\r\n        headers: {\r\n            // 'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            // 'Authorization': `Bearer ${token}`\r\n        },\r\n        method: 'POST',\r\n        body: data,\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function getUserByWalletAddress(walletAddress: string) {\r\n    return fetch(`${ environment.serverUrl }/user/${walletAddress}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'GET',\r\n    }).then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response: any) {\r\n    return response.json();\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { UserContext } from './user-context';\r\nimport { setLocalStorageWalletStatus } from '../../utils/wallet';\r\nimport { toast } from '../../utils/notification.util';\r\nimport { isEthNetwork, login } from '../../utils/network/user';\r\n\r\n\r\nexport const UserProvider = (props: React.PropsWithChildren<{}>) => {\r\n\r\n  const [walletAddress, setWalletAddress] = useState<string>('');\r\n  const [token, setToken] = useState<string>('');\r\n\r\n    const connectWallet = () => {\r\n        window.ethereum.request({ method: 'eth_requestAccounts' })\r\n            .then(handleAccountsChanged)\r\n            .catch(async (err: any) => {\r\n                setWalletAddress('');\r\n                setLocalStorageWalletStatus('').then();\r\n                if (err.code === 4001) {\r\n                    toast('danger', 'Please connect to MetaMask.');\r\n                }\r\n            });\r\n        window.ethereum.on('accountsChanged', handleAccountsChanged)\r\n    }\r\n\r\n    const handleAccountsChanged = async (accounts: string[]) => {\r\n        if (!await isEthNetwork()) {\r\n            setWalletAddress('');\r\n            setLocalStorageWalletStatus('').then();\r\n            return;\r\n        }\r\n        if (!accounts || !accounts.length) {\r\n            setWalletAddress('');\r\n            setLocalStorageWalletStatus('').then();\r\n            toast('danger', 'Please connect to MetaMask.');\r\n            return;\r\n        }\r\n        setWalletAddress(accounts[0])\r\n        login(accounts[0]).then((result: any) => {\r\n            if(!result) {\r\n                return;\r\n            }\r\n            setToken(result.accessToken);\r\n            setLocalStorageWalletStatus(accounts[0]).then();\r\n        });\r\n    }\r\n\r\n  return (\r\n    <UserContext.Provider value={{\r\n      walletAddress: walletAddress,\r\n      setWalletAddress: setWalletAddress,\r\n      token: token,\r\n      setToken: setToken,\r\n      connectWallet: connectWallet,\r\n    }}>\r\n      { props.children }\r\n    </UserContext.Provider>\r\n  );\r\n\r\n}\r\n","import React, {FunctionComponent, useState} from 'react'\n\nexport interface FavoriteButtonProps {\n  isFavoritePage: boolean;\n}\n\nconst FavoriteButton: FunctionComponent<FavoriteButtonProps> = ({ isFavoritePage }) => {\n  const [favorite, setFavorite] = useState<boolean>(true);\n\n  return (\n    <div>\n      <button className=\"width-45 height-45 border-secondary border-radius-3 border-1\" style={{ backgroundColor:\"rgba(167,130,233,0.03)\" }} type=\"button\"\n          onClick={() => setFavorite(!favorite)}>\n       {\n          isFavoritePage ? (\n              <svg xmlns=\"http://www.w3.org/2000/svg\" stroke='#fd6060' width=\"70%\" height=\"70%\" viewBox=\"0 0 512 512\">\n                <path d=\"M112,112l20,320c.95,18.49,14.4,32,32,32H348c17.67,0,30.87-13.51,32-32l20-320\"\n                      style={{fill: 'none', strokeLinecap:'round', strokeLinejoin:'round', strokeWidth:'32px'}} />\n                <path d=\"M112,112l20,320c.95,18.49,14.4,32,32,32H348c17.67,0,30.87-13.51,32-32l20-320\"\n                      style={{fill: 'none', strokeLinecap:'round', strokeLinejoin:'round', strokeWidth:'32px'}} />\n                <line x1=\"80\" y1=\"112\" x2=\"432\" y2=\"112\"\n                      style={{fill: 'none', strokeLinecap:'round', strokeLinejoin:'round', strokeWidth:'32px'}} />\n                <path d=\"M192,112V72h0a23.93,23.93,0,0,1,24-24h80a23.93,23.93,0,0,1,24,24h0v40\"\n                      style={{fill: 'none', strokeLinecap:'round', strokeLinejoin:'round', strokeWidth:'32px'}} />\n                <line x1=\"256\" y1=\"176\" x2=\"256\" y2=\"400\"\n                      style={{fill: 'none', strokeLinecap:'round', strokeLinejoin:'round', strokeWidth:'32px'}} />\n                <line x1=\"184\" y1=\"176\" x2=\"192\" y2=\"400\"\n                      style={{fill: 'none', strokeLinecap:'round', strokeLinejoin:'round', strokeWidth:'32px'}} />\n                <line x1=\"328\" y1=\"176\" x2=\"320\" y2=\"400\"\n                      style={{fill: 'none', strokeLinecap:'round', strokeLinejoin:'round', strokeWidth:'32px'}} />\n              </svg>\n          ) : (\n              <svg xmlns='http://www.w3.org/2000/svg' width='70%' height='70%' viewBox='0 0 512 512'>\n                <path\n                    d='M352.92,80C288,80,256,144,256,144s-32-64-96.92-64C106.32,80,64.54,124.14,64,176.81c-1.1,109.33,86.73,187.08,183,252.42a16,16,0,0,0,18,0c96.26-65.34,184.09-143.09,183-252.42C447.46,124.14,405.68,80,352.92,80Z'\n                    style={{fill: favorite ? '#a782e9' : 'none', strokeLinecap:'round', strokeLinejoin:'round', strokeWidth:'32px', stroke:'#a782e9'}} />\n              </svg>\n          )\n        }\n      </button>\n    </div>\n    )\n  }\n\n  export default FavoriteButton\n","import React, { FunctionComponent } from 'react'\nimport { Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-slick';\n\nimport { HotItem } from '../core/models/hot-item';\nimport FavoriteButton from './favorite-button';\n\nexport interface HotItemProps {\n    hotItems: HotItem[];\n}\n\nconst HotItemSlider: FunctionComponent<HotItemProps> = ({ hotItems }) => {\n\n    let hotIemSlider: Slider | null;\n\n    const hotItemSettings = {\n        infinite: true,\n        slidesToShow: 2,\n        speed: 500,\n        dots: false,\n        arrows: false,\n    };\n\n    return (\n        <div>\n            {/**/ }\n            <div className=\"d-flex d-lg-flex justify-content-between w-100 mt-100 mt-100 height-50\">\n                <div className=\"d-flex h-100\">\n                    <div className=\"border-left-5 border-secondary my-5\"></div>\n                    <div className=\"font-32 text-center text-white ml-50\">HOT ITEMS</div>\n                </div>\n                <div className=\"d-flex width-100 h-100 align-items-center justify-content-between mr-30\">\n                    <div className=\"d-flex border-1 border-secondary border-radius-4 text-white\"\n                         onClick={ () => {\n                             if (hotIemSlider != null) {\n                                 hotIemSlider.slickPrev();\n                             }\n                         }\n                         }\n                    >\n                        <Icon className=\"mr-0\" name=\"angle left\" size=\"big\"/>\n                    </div>\n                    <div className=\"d-flex border-1 border-secondary border-radius-4 text-white\"\n                         onClick={ () => {\n                             if (hotIemSlider != null) {\n                                 hotIemSlider.slickNext();\n                             }\n                         }\n                         }\n                    >\n                        <Icon className=\"mr-0\" name=\"angle right\" size=\"big\"/>\n                    </div>\n                </div>\n            </div>\n            <Slider ref={ c => (hotIemSlider = c) }\n                    className=\"d-flex justify-content-between mt-30\" { ...hotItemSettings } >\n                {\n                    hotItems.map((item, index) => (\n                            <div className=\"p-10\" key={ index }>\n                                <div\n                                    className=\"d-flex flex-column flex-lg-row w-100 border-1 border-secondary border-radius-3 p-10\">\n                                    <Link to={ { pathname: '/nftDetail', state: { nftId: item.nftName } } }>\n                                        <img className=\"width-240 height-320 border-1 border-radius-5\" src=\"./images/card.jpg\" alt=\"example\"/>\n                                    </Link>\n                                    <div className=\"d-flex w-100 flex-column justify-content-between text-white ml-20\">\n                                        <div className=\"d-flex flex-column\">\n                                            <div className=\"d-flex font-30\"> { item.nftName } </div>\n                                            <span> Category: { item.category } </span>\n                                            <span> Category: { item.category } </span>\n                                        </div>\n                                        <div className=\"d-flex flex-column\">\n                                            <div className=\"d-flex font-30\">{ item.nftName }</div>\n                                            <span>Category: { item.category }</span>\n                                            <div className=\"d-flex w-100 height-45 justify-content-between mt-20\">\n                                                <button\n                                                    className=\"border-radius-4 border-0 width-150 h-100 bg-success font-14 font-weight-bold text-white\">\n                                                    Buy Now\n                                                </button>\n                                                <FavoriteButton isFavoritePage={ false }/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    )\n                }\n            </Slider>\n        </div>\n    )\n}\n\nexport default HotItemSlider\n","import { HotItem } from '../core/models/hot-item';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FavoriteButton from './favorite-button';\r\n\r\nexport interface NftCardProps {\r\n    item: HotItem;\r\n    key: number;\r\n}\r\n\r\nexport const NftCard: FunctionComponent<NftCardProps> = ({ item,key }) => {\r\n    return(\r\n        <div className=\"d-flex w-95 flex-column border-1 border-secondary border-radius-3\" key={key}>\r\n            <Link to={{pathname: '/nftDetail', state: {nftId: item.nftName}}}>\r\n                <img className=\"border-1 width-240 height-320 border-radius-5 height-280\" src=\"./images/card.jpg\"\r\n                     alt=\"example\"/>\r\n            </Link>\r\n            <div className=\"d-flex w-100 flex-column justify-content-between text-white p-10\">\r\n                <div className=\"d-flex flex-column\">\r\n                    <div className=\"d-flex font-30\">{item.nftName}</div>\r\n                    <span>Category: {item.category}</span>\r\n                    <span>Category: {item.category}</span>\r\n                </div>\r\n                <div className=\"d-flex flex-column\">\r\n                    <div className=\"d-flex font-30\">{item.nftName}</div>\r\n                    <span>Category: {item.category}</span>\r\n                    <div className=\"d-flex w-100 height-45 justify-content-between mt-20\">\r\n                        <button\r\n                            className=\"border-radius-4 border-0 w-70 h-100 bg-success font-14 font-weight-bold text-white\">\r\n                            Buy Now\r\n                        </button>\r\n                        <FavoriteButton isFavoritePage={ false }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { FunctionComponent } from 'react'\nimport { Icon } from 'semantic-ui-react';\nimport Slider from 'react-slick';\n\nimport { HotItem } from '../core/models/hot-item';\nimport { NftCard } from './nft-card';\n\nexport interface DropsProps {\n  hotItems: HotItem[];\n}\n\nconst DropSlider: FunctionComponent<DropsProps> = ({ hotItems }) => {\n\n  let newDropSlider: Slider | null;\n\n  const newDropSettings = {\n    infinite: true,\n    slidesToShow: 5,\n    speed: 500,\n    dots: false,\n    arrows: false,\n  };\n\n  return (\n    <div>\n        {/*New Drops*/}\n        <div className=\"d-flex justify-content-between w-100 mt-100 mt-100 height-50\">\n            <div className=\"d-flex h-100\">\n                <div className=\"border-left-5 border-secondary my-5\"></div>\n                <div className=\"font-32 text-center text-white ml-50\">NEW DROPS</div>\n            </div>\n            <div className=\"d-flex width-100 h-100 align-items-center justify-content-between mr-30\">\n                <div className=\"d-flex border-1 border-secondary border-radius-4 text-white\"\n                     onClick={() => {\n                         if (newDropSlider != null) {\n                             newDropSlider.slickPrev();\n                         }\n                     }\n                     }\n                >\n                    <Icon className=\"mr-0\" name=\"angle left\" size=\"big\"/>\n                </div>\n                <div className=\"d-flex border-1 border-secondary border-radius-4 text-white\"\n                     onClick={() => {\n                         if (newDropSlider != null) {\n                             newDropSlider.slickNext();\n                         }\n                     }\n                     }\n                >\n                    <Icon className=\"mr-0\" name=\"angle right\" size=\"big\"/>\n                </div>\n            </div>\n        </div>\n\n        <Slider ref={c => (newDropSlider = c)}\n                className=\"d-flex justify-content-between mt-30\" {...newDropSettings} >\n            {\n                hotItems.map((item, index) => (\n                        <NftCard item={item} key={index}/>\n                    )\n                )\n            }\n        </Slider>\n    </div>\n    )\n  }\n\nexport default DropSlider\n","import React, { FunctionComponent } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'semantic-ui-react';\n\nimport { HotItem } from '../core/models/hot-item';\n\nexport interface RecentlyViewProps {\n    title: string\n    recentlyViewData: HotItem[];\n}\n\nconst RecentlyView: FunctionComponent<RecentlyViewProps> = ({ title, recentlyViewData }) => {\n\n  return (\n    <div className=\"col-12 col-md-6 col-xl-4\">\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <div className=\"d-flex w-100 align-items-center justify-content-between\">\n                    <div className=\"font-30 text-white\">{ title }</div>\n                    <button className=\"d-flex width-80 height-30 bg-dark border-radius-6 border-1 text-white justify-content-center align-items-center\">\n                        View All\n                    </button>\n                </div>\n\n                <div className=\"d-flex flex-column w-100 mt-15 border-1 border-secondary border-radius-6 align-items-center justify-content-center\">\n                    {\n                        recentlyViewData.map((item, index) => (\n                                <div className=\"d-flex w-100 p-20\" key={index}>\n                                    <Link to={{pathname: '/nftDetail', state: {nftId: item.nftName}}}>\n                                        <img className=\"border-1 border-radius-5 w-100\" src=\"./images/card.jpg\" alt=\"example\"/>\n                                    </Link>\n                                    <div className=\"d-flex w-100 flex-column justify-content-between text-white ml-20\">\n                                        <div className=\"d-flex font-16\"> The Evil Within: The Assignment </div>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <div className=\"d-flex flex-column\">\n                                                <div className=\"d-flex font-24\"> $1.99 </div>\n                                                <div className=\"d-flex\">\n                                                    <div className=\"d-flex font-13 font-italic\"> $4.99 </div>\n                                                    <div className=\"d-flex font-13 ml-10\"> 60% OFF </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        )\n                    }\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n    )\n  }\n\nexport default RecentlyView\n","import { HotItem } from '../models/hot-item';\r\n\r\nexport const hotItemData: HotItem[] = [\r\n    {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }, {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }, {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }, {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }, {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }, {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }, {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }, {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }\r\n]\r\n\r\nexport const recentData: HotItem[] = [\r\n    {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }, {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }, {\r\n        imageSrc: './images/card.jpg',\r\n        nftName: 'Test NFT',\r\n        creator: 'CHM',\r\n        category: 'Video',\r\n        isFavorite: true,\r\n    }\r\n]\r\n","import React, { useState } from 'react';\r\n\r\nimport HotItemSlider from '../../component/hot-item-slider';\r\nimport DropSlider from '../../component/drop-slider';\r\nimport RecentlyView from '../../component/recently-view';\r\nimport { HotItem } from '../../core/models/hot-item';\r\nimport { hotItemData, recentData } from '../../core/data/hot-item-data';\r\n\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport 'slick-carousel/slick/slick.css';\r\nimport './home-page.scss'\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [hotItems, setHotItems] = useState<HotItem[]>(hotItemData);\r\n    const [recent, setRecent] = useState<HotItem[]>(recentData);\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column w-100 bg-primary mt-120\">\r\n\r\n            {/*Hot Items*/ }\r\n            <HotItemSlider hotItems={ hotItems }/>\r\n\r\n            {/*New Drops*/ }\r\n            <DropSlider hotItems={ hotItems }/>\r\n\r\n            <div className=\"row mt-30\">\r\n                {/*Recently Viewed*/ }\r\n                <RecentlyView title={ 'Recently Viewed' } recentlyViewData={ recent }/>\r\n\r\n                {/*Your Auctions*/ }\r\n                <RecentlyView title={ 'Your Auctions' } recentlyViewData={ recent }/>\r\n\r\n                {/*Collections*/ }\r\n                <RecentlyView title={ 'Collections' } recentlyViewData={ recent }/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, {FunctionComponent, useRef, useEffect, useState} from 'react';\r\nimport { loadImage } from 'canvas';\r\n\r\nimport { Penguin } from \"../core/models/penguin\";\r\n\r\nexport interface CanvasProps {\r\n    penguin: Penguin | undefined;\r\n    className: string;\r\n}\r\n\r\nexport const Canvas: FunctionComponent<CanvasProps> = ({ penguin, className }) => {\r\n\r\n    const canvasRef = useRef(null);\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n       drawPenguinImage(penguin).then();\r\n    },[penguin]);\r\n\r\n    const drawPenguinImage = async (penguin: Penguin | undefined) => {\r\n\r\n        if(penguin) {\r\n            const keys = ['background', 'skin', 'eye', 'mouth', 'cloth', 'glass', 'hair', 'hat', 'neck', 'random_object'];\r\n            setIsLoading(true);\r\n            const images = [];\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                // @ts-ignore\r\n                if (penguin[key].length > 0) {\r\n                    // @ts-ignore\r\n                    const image = await loadImage(penguin[key]);\r\n                    images.push(image);\r\n                }\r\n            }\r\n            setIsLoading(false);\r\n            const canvas: any = canvasRef.current;\r\n            if(canvas) {\r\n                const ctx = canvas.getContext('2d');\r\n                for(let i = 0 ; i < images.length ; i++) {\r\n                    const image = images[i];\r\n                    ctx.drawImage(image, 0, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ? (\r\n                    <img className=\"w-100 border-radius-10\" src=\"images/loading-spinner.gif\"/>\r\n                ) : (\r\n                    <canvas ref={canvasRef} className={className} width=\"512\" height=\"512\"/>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}","import { AbiItem } from 'web3-utils';\r\n\r\nexport const harmonyPenguinAbi: AbiItem[] = [\r\n    {\r\n        \"inputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"dbID\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numberOfTransfers\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"previousOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"currentOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"BoughtToken\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"dbID\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"isForSale\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangedIsForSale\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"dbID\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"price\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangedTokenPrice\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"dbID\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"string\",\r\n                \"name\": \"tokenURI\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"price\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numberOfTransfers\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"isForSale\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"mintedBy\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"currentOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"previousOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"allMintedPenguins\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"dbID\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"tokenURI\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"price\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numberOfTransfers\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"isForSale\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"internalType\": \"address payable\",\r\n                \"name\": \"mintedBy\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address payable\",\r\n                \"name\": \"currentOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address payable\",\r\n                \"name\": \"previousOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"baseURI\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectionName\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectionNameSymbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"colorExists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"penguinsCounter\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"_data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"tokenNameExists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"tokenURIExists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"dbID\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_tokenURI\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_price\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string[]\",\r\n                \"name\": \"_penguin\",\r\n                \"type\": \"string[]\"\r\n            }\r\n        ],\r\n        \"name\": \"mintPenguin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getIdDB\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPeguin\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"tokenId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"dbID\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"tokenURI\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"numberOfTransfers\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bool\",\r\n                        \"name\": \"isForSale\",\r\n                        \"type\": \"bool\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string[]\",\r\n                        \"name\": \"penguin\",\r\n                        \"type\": \"string[]\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address payable\",\r\n                        \"name\": \"mintedBy\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address payable\",\r\n                        \"name\": \"currentOwner\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address payable\",\r\n                        \"name\": \"previousOwner\",\r\n                        \"type\": \"address\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct HarmonyPenguins.MintedPenguin\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenOwner\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenMetaData\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getNumberOfTokensMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTotalNumberOfTokensOwnedByAnAddress\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenExists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"buyToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_newPrice\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"changeTokenPrice\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"toggleForSale\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n];\r\n\r\nexport const erc721Abi: AbiItem[] = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"contractURI\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"tokenURIPrefix\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"previousOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address[]\",\r\n                \"name\": \"recipients\",\r\n                \"type\": \"address[]\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"bps\",\r\n                \"type\": \"uint256[]\"\r\n            }\r\n        ],\r\n        \"name\": \"SecondarySaleFees\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"cancelTokenSale\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"contractURI\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"fees\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address payable\",\r\n                \"name\": \"recipient\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"value\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"id\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getFeeBps\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256[]\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"id\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getFeeRecipients\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address payable[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"address[]\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"id\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getRoyaltyAddress\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address payable\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"id\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getRoyaltyFee\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"address payable\",\r\n                        \"name\": \"recipient\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"value\",\r\n                        \"type\": \"uint256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ERC721Base.Fee[]\",\r\n                \"name\": \"_fees\",\r\n                \"type\": \"tuple[]\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"tokenURI\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"signedMessage\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"v\",\r\n                \"type\": \"uint8\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"r\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"s\",\r\n                \"type\": \"bytes32\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"_data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"contractURI\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"setContractURI\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setTokenOnAuction\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setTokenOnBasic\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setTokenOnSale\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"tokenURIPrefix\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"setTokenURIPrefix\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"signer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"tokenStatus\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"enum ERC721.STATUS\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"tokenURIPrefix\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n];\r\n\r\nexport const escrowAbi: AbiItem[] = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"contract ISingleNFT\",\r\n                \"name\": \"_singleNFT\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"previousOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"DAO\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address payable\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenID\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bidder\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"bid\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenID\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"finishAuction\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getFinalPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"price\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"winner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"singleNFT\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"contract ISingleNFT\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenID\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_price\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"startAuction\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n];\r\n\r\nexport const treasuryAbi: AbiItem[] = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"contract ISingleNFT\",\r\n                \"name\": \"_singleNFT\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"contract Escrow\",\r\n                \"name\": \"_escrow\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"previousOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"DAO\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address payable\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"auctionDuration\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"bidOnAuction\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"buyToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"cancelOnSale\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"escrow\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"contract Escrow\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"finishAuction\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"price\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_price\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"duration\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setOnAuction\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_price\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setOnSale\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"single\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"contract ISingleNFT\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n];","export const erc721Address = '0x77671ba4E25847387ff674D2F5911C38e3eD7c99';\r\nexport const escrowAddress = '0x4170E5AC7f25Df7c21937D476ad1002891550b0B';\r\nexport const treasuryAddress = '0xe57508ab678440cd4d87effc523AF6e348a97202';\r\n\r\nexport const harmonyPenguinAddress = '0x8152B1A745fF2d9246cEC8BF7AAFe186F0470240';","export const ethUnit = 1000000000000000000;","import React, {FunctionComponent, useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Button,\r\n    Input,\r\n    CardText,\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    CardSubtitle,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody, FormGroup, Label, ModalFooter\r\n} from 'reactstrap';\r\n\r\nimport { NFT } from '../core/models/nft';\r\nimport FavoriteButton from './favorite-button';\r\nimport { environment } from '../../environment';\r\nimport {Penguin} from \"../core/models/penguin\";\r\nimport {Canvas} from \"./canvas\";\r\nimport {lengthOfAddress, reduceTheWalletAddress} from \"../core/utils/wallet\";\r\nimport {useUser} from \"../core/context-provider/user/user-context\";\r\nimport Web3 from \"web3\";\r\nimport {harmonyPenguinAbi} from \"../core/data/web3-abi-address/abi\";\r\nimport {harmonyPenguinAddress} from \"../core/data/web3-abi-address/address\";\r\nimport {toast} from \"../core/utils/notification.util\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {ethUnit} from \"../core/data/ether-unit\";\r\n\r\nexport interface CatalogCardProps {\r\n    penguin: any;\r\n}\r\n\r\nexport const CatalogCard: FunctionComponent<CatalogCardProps> = ({ penguin }) => {\r\n\r\n    const { walletAddress, connectWallet } = useUser();\r\n    const [penguinData, setPenguinData] = useState<Penguin>();\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [isModalShow, setIsModalShow] = useState<boolean>(false);\r\n    const [isSaleForMode, setIsSaleForMode] = useState<boolean>(false);\r\n    const [price, setPrice] = useState<number>(0);\r\n\r\n    const ethereum = window.ethereum;\r\n    const metaWeb3 = new Web3(ethereum);\r\n    const harmonyPenguinContract = new metaWeb3.eth.Contract(harmonyPenguinAbi, harmonyPenguinAddress);\r\n\r\n    useEffect(() => {\r\n        if(penguin) {\r\n            setPenguinData(penguin);\r\n            setIsSaleForMode(penguin?.isForSale);\r\n            setPrice(penguin?.price);\r\n            // console.log(penguin);\r\n            // setIsLoading(true);\r\n            // fetch(`https://ipfs.infura.io/ipfs/${penguin.hashPath}`)\r\n            //     .then(res => res.json())\r\n            //     .then(\r\n            //         (result: Penguin) => {\r\n            //             setPenguinData(result);\r\n            //             setIsLoading(false);\r\n            //         },\r\n            //         (error) => {\r\n            //             console.log(error);\r\n            //         }\r\n            //     );\r\n        }\r\n    }, [penguin])\r\n\r\n    return (\r\n        <div className=\"p-10 col-12 col-sm-6 col-md-4 col-lg-3 mt-15\">\r\n            <Card  >\r\n                {\r\n                    isLoading ? (\r\n                        <img className=\"w-100 border-radius-10\" src=\"images/loading-spinner.gif\"/>\r\n                    ) : (\r\n                        <Canvas penguin={penguinData} className=\"w-100 border-radius-10\"/>\r\n                    )\r\n                }\r\n                <CardBody className=\"p-5 text-white\">\r\n                    <CardTitle tag=\"h4\">ID: { penguinData?.tokenId }</CardTitle>\r\n                    <CardText>\r\n                        Price: { penguinData?.price } <br/>\r\n                        Transfers: { penguinData?.numberOfTransfers } <br/>\r\n                        Creator: { reduceTheWalletAddress(penguinData?.mintedBy) } <br/>\r\n                        Owner: { reduceTheWalletAddress(penguinData?.currentOwner) }\r\n                        {\r\n                            isSaleForMode ? '' : 'Not Sale'\r\n                        }\r\n                    </CardText>\r\n                    {\r\n                        walletAddress.length === lengthOfAddress ? (\r\n                            walletAddress.toUpperCase() === penguinData?.currentOwner?.toUpperCase() ? (\r\n                                <Button className=\"w-100\" onClick={() => setIsModalShow(true)}>Edit</Button>\r\n                            ) : (\r\n                                <Button className=\"w-100\" disabled={!isSaleForMode} onClick={() => {\r\n                                    harmonyPenguinContract.methods.buyToken(penguinData?.tokenId).send({ from: walletAddress, value: new BigNumber(price * ethUnit) }).then((result: any) => {\r\n                                        if(penguinData) {\r\n                                            setPenguinData({ ...penguinData, currentOwner: walletAddress });\r\n                                            toast('success', 'success');\r\n                                        }\r\n                                    });\r\n                                }}>Buy</Button>\r\n                            )\r\n                        ) : (\r\n                            <Button className=\"w-100\" onClick={connectWallet}>Connect Wallet</Button>\r\n                        )\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Modal isOpen={isModalShow} toggle={() => setIsModalShow(!isModalShow)}>\r\n                <ModalHeader>Edit Price and sale mode.</ModalHeader>\r\n                <ModalBody>\r\n                    <FormGroup className=\"mx-2\" check>\r\n                        <Input placeholder=\"price\" type=\"number\" value={price} disabled={!isSaleForMode} onChange={(e) => { setPrice(Number(e.target.value)) }}/>\r\n                        <br/>\r\n                        <Label check>\r\n                            <Input type=\"radio\" checked={isSaleForMode} onChange={() => {\r\n                                setIsSaleForMode(true);\r\n                                harmonyPenguinContract.methods.toggleForSale(penguinData?.tokenId).send({ from: walletAddress }).then((result: any) => {\r\n                                    if(penguinData) {\r\n                                        setPenguinData({ ...penguinData, isForSale: true });\r\n                                        toast('success', 'success');\r\n                                    }\r\n                                });\r\n                            }} /> Sale Mode\r\n                        </Label>\r\n                        <br/>\r\n                        <Label check>\r\n                            <Input type=\"radio\" checked={!isSaleForMode} onChange={() => {\r\n                                setIsSaleForMode(false);\r\n                                harmonyPenguinContract.methods.toggleForSale(penguinData?.tokenId).send({ from: walletAddress }).then((result: any) => {\r\n                                    if(penguinData) {\r\n                                        setPenguinData({ ...penguinData, isForSale: false });\r\n                                        toast('success', 'success');\r\n                                    }\r\n                                });\r\n                            }} /> Not Sale Mode\r\n                        </Label>\r\n                    </FormGroup>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"secondary\" onClick={() => {\r\n                        harmonyPenguinContract.methods.changeTokenPrice(penguinData?.tokenId, (new BigNumber(price * ethUnit))).send({ from: walletAddress }).then((result: any) => {\r\n                            if(penguinData) {\r\n                                setPenguinData({ ...penguinData, price: price });\r\n                            }\r\n                        });\r\n                    }}>Submit</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n\r\n        // <div className=\"d-flex flex-column flex-xs-column border-1 border-secondary border-radius-3\" >\r\n        //     <Link to={ { pathname: `/nftDetail/${nftItem.id}`} }>\r\n        //         {\r\n        //             nftItem.logoImageName !== '' && nftItem.logoImageName && (\r\n        //                 <img className=\"border-1 w-100 max-height-250 border-radius-5\" src={ `${environment.serverUrl}/nft/logo/${nftItem.logoImageName}` } alt=\"example\"/>\r\n        //             )\r\n        //         }\r\n        //     </Link>\r\n        //     <div className=\"d-flex w-100 flex-column justify-content-between text-white p-10\">\r\n        //         <div className=\"d-flex flex-column\">\r\n        //             <div className=\"d-flex font-23\">{ nftItem.nftName }</div>\r\n        //             <span>{ nftItem.price } ETH </span>\r\n        //             <div className=\"d-flex w-100 height-45 justify-content-between mt-20\">\r\n        //                 <button\r\n        //                     className=\"border-radius-4 border-0 w-70 h-100 bg-success font-14 font-weight-bold text-white\">\r\n        //                     Buy Now\r\n        //                 </button>\r\n        //                 <FavoriteButton isFavoritePage={ isFavoritePage }/>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n\r\n    )\r\n}\r\n","import { environment } from '../../../../environment';\r\nimport { Filter } from '../../models/filter';\r\n\r\nexport function catalogFilterPenguin(filterData: Filter) {\r\n    return fetch(`${ environment.serverUrl }/penguin/filter`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            // 'Authorization': `Bearer ${token}`\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(filterData),\r\n    }).then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response: any) {\r\n    return response.json();\r\n}","export const backgrounds: string[] = [\r\n    'background_1.png',\r\n    'background_2.png',\r\n    'background_3.png',\r\n    'background_4.png',\r\n    'background_5.png',\r\n    'background_6.png',\r\n    'background_7.png',\r\n    'background_8.png',\r\n    'background_9.png',\r\n    'background_10.png',\r\n    'background_11.png',\r\n    'background_12.png',\r\n    'background_13.png',\r\n    'background_14.png',\r\n    'background_15.png',\r\n    'background_16.png',\r\n    'background_17.png',\r\n    'background_18.png',\r\n    'background_19.png',\r\n    'background_20.png',\r\n    'rare_background_1.png',\r\n    'rare_background_2.png',\r\n    'rare_background_3.png',\r\n    'rare_background_4.png',\r\n    'rare_background_5.png',\r\n    'rare_background_6.png',\r\n    'rare_background_7.png',\r\n    'rare_background_8.png',\r\n    'rare_background_9.png',\r\n    'rare_background_10.png',\r\n];\r\n\r\nexport const clothes: string[] = [\r\n    '',\r\n    'clothes_camouflage.png',\r\n    'clothes_hawaiian.png',\r\n    'clothes_jersey.png',\r\n    'clothes_kimonoblue.png',\r\n    'clothes_kimonogold.png',\r\n    'clothes_kimonopurple.png',\r\n    'clothes_overhalls.png',\r\n    'clothes_seatshirt.png',\r\n    'clothes_sleevelessblue.png',\r\n    'clothes_sleevelessred.png',\r\n    'clothes_tanktop.png',\r\n    'clothes_tshirtblue.png',\r\n    'clothes_tshirtharmony.png',\r\n    'clothes_tshirtlovefish.png',\r\n    'clothes_tshirtred.png',\r\n];\r\n\r\nexport const eyes: string[] = [\r\n    'eyes_blue.png',\r\n    'eyes_bluedown.png',\r\n    'eyes_brown.png',\r\n    'eyes_football.png',\r\n    'eyes_happy.png',\r\n    'eyes_laser.png',\r\n    'eyes_makeup.png',\r\n    'eyes_reddown.png',\r\n    'eyes_suspicious.png',\r\n    'eyes_wink.png',\r\n];\r\n\r\nexport const glasses: string[] = [\r\n    '',\r\n    'glasses_biker.png',\r\n    'glasses_black.png',\r\n    'glasses_cool.png',\r\n    'glasses_cyclops.png',\r\n    'glasses_eyepatch.png',\r\n    'glasses_lady.png',\r\n    'glasses_normal.png',\r\n    'glasses_squirtle.png',\r\n    'glasses_starts.png',\r\n    'glasses_stripe.png',\r\n    'glasses_thief.png',\r\n];\r\n\r\nexport const hairs: string[] = [\r\n    '',\r\n    'hair_afro.png',\r\n    'hair_mohawkgreen.png',\r\n    'hair_mohawkpink.png',\r\n    'hair_penguin.png',\r\n];\r\n\r\nexport const hats: string[] = [\r\n    '',\r\n    'hats_bandana.png',\r\n    'hats_bluecap.png',\r\n    'hats_brown.png',\r\n    'hats_camouflage.png',\r\n    'hats_cap.png',\r\n    'hats_chinese.png',\r\n    'hats_fisher.png',\r\n    'hats_footballhelmet.png',\r\n    'hats_goldencrown.png',\r\n    'hats_hhscarfblue.png',\r\n    'hats_hhscarfred.png',\r\n    'hats_orangecap.png',\r\n    'hats_papanoel.png',\r\n    'hats_silvercrown.png',\r\n    'hats_swetband.png',\r\n    'hats_tophat.png',\r\n    'hats_vinking.png',\r\n    'hats_winter.png',\r\n];\r\n\r\nexport const mouths: string[] = [\r\n    'mouth_black.png',\r\n    'mouth_makeup.png',\r\n    'mouth_normal.png',\r\n    'mouth_open.png',\r\n    'mouth_smoke.png',\r\n];\r\n\r\nexport const necks: string[] = [\r\n    '',\r\n    'neck_bowtieblack.png',\r\n    'neck_bowtiepink.png',\r\n    'neck_flowerneck.png',\r\n    'neck_scarfblue.png',\r\n    'neck_scarfpink.png',\r\n    'neck_teeth.png',\r\n    'neck_xmaslights.png',\r\n];\r\n\r\nexport const random_objects: string[] = [\r\n    '',\r\n    'random_arrow.png',\r\n    'random_fishgreen.png',\r\n    'random_fishorange.png',\r\n    'random_headphones.png',\r\n    'random_wingsaura.png',\r\n];\r\n\r\nexport const skins: string[] = [\r\n    'skin_black.png',\r\n    'skin_blue.png',\r\n    'skin_brown.png',\r\n    'skin_darkgrey.png',\r\n    'skin_golden.png',\r\n    'skin_grey.png',\r\n    'skin_lightbrown.png',\r\n    'skin_orange.png',\r\n    'skin_pink.png',\r\n    'skin_silver.png',\r\n];","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport {Button, Input} from \"reactstrap\";\r\n\r\nimport { CatalogCard } from '../../component/catalog-card';\r\nimport { catalogFilterPenguin } from '../../core/utils/network/catalog';\r\nimport { Filter } from '../../core/models/filter';\r\n\r\nimport { NFT } from '../../core/models/nft';\r\nimport './catalog-page.scss'\r\nimport { useUser } from '../../core/context-provider/user/user-context';\r\nimport { arrNftCategories } from '../../core/utils/category';\r\nimport {Penguin} from \"../../core/models/penguin\";\r\nimport {Canvas} from \"../../component/canvas\";\r\nimport { backgrounds, clothes, eyes, glasses, hairs, hats, mouths, necks, random_objects, skins } from \"../../core/data/basic-images\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useOverlay} from \"../../core/context-provider/loading-overlay/loading-overlay-context\";\r\n\r\nexport const countOnDisplay: number = 12;\r\n\r\nexport interface CatalogProps {\r\n    location: any\r\n}\r\n\r\nexport const CatalogPage = (props: CatalogProps) => {\r\n\r\n    const { setIsActivity, setOverlayText } = useOverlay();\r\n\r\n    const [penguin, setPenguin] = useState<Penguin>({\r\n        background: '',\r\n        skin: '',\r\n        eye: '',\r\n        mouth: '',\r\n        cloth: '',\r\n        glass: '',\r\n        hair: '',\r\n        hat: '',\r\n        neck: '',\r\n        random_object: '',\r\n    });\r\n    const [filterData, setFilterData] = useState<Filter>({\r\n        penguin: penguin,\r\n        offset: 0,\r\n        limit: countOnDisplay,\r\n    });\r\n    const path = 'basic_images';\r\n\r\n    const [pageCount, setPageCount] = useState<number>(0);\r\n    const [penguins, setPenguins] = useState<Penguin[]>([]);\r\n\r\n    useEffect(() => {\r\n        setIsActivity(true);\r\n        setOverlayText('...Loading');\r\n        catalogFilterPenguin(filterData).then((result: [Penguin[], number]) => {\r\n            setIsActivity(false);\r\n            if(!result || !result[0]) {\r\n                return;\r\n            }\r\n            setPenguins([...result[0]]);\r\n            if(parseInt(String(result[1] / countOnDisplay)) === 0){\r\n                setPageCount(parseInt(String(result[1] / countOnDisplay)));\r\n            } else if(parseInt(String(result[1] / countOnDisplay)) > 0) {\r\n                setPageCount(parseInt(String(result[1] / countOnDisplay)) + 1);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column flex-lg-row w-100 mt-200 border-1 border-secondary justify-content-between\">\r\n            <div className=\"d-flex flex-column col-12 col-lg-3 p-30\">\r\n                <div className=\"mt-10 flex-column\">\r\n                    <Button onClick={() => {\r\n                        setFilterData({...filterData, penguin: penguin});\r\n                        setIsActivity(true);\r\n                        setOverlayText('...Filtering');\r\n                        catalogFilterPenguin({...filterData, penguin: penguin}).then((result: [Penguin[], number]) => {\r\n                            setIsActivity(false);\r\n                            if(!result || !result[0]) {\r\n                                return;\r\n                            }\r\n                            setPenguins([...result[0]]);\r\n                            if(parseInt(String(result[1] / countOnDisplay)) === 0){\r\n                                setPageCount(parseInt(String(result[1] / countOnDisplay)));\r\n                            } else if(parseInt(String(result[1] / countOnDisplay)) > 0) {\r\n                                setPageCount(parseInt(String(result[1] / countOnDisplay)) + 1);\r\n                            }\r\n                        });\r\n                    }}>\r\n                        Filter Penguin\r\n                    </Button>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Background</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const background = e.target.value.length > 0 ? `${path}/backgrounds/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, background: background });\r\n                           }}\r\n                    >\r\n                        <>\r\n                            <option label='' value='' />\r\n                            {\r\n                                backgrounds.map((background, index) => (\r\n                                        <option key={index} label={background.replace('.png', '')} value={background} />\r\n                                    )\r\n                                )\r\n                            }\r\n                        </>\r\n                    </Input>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Skin</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const skin = e.target.value.length > 0 ? `${path}/skins/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, skin: skin });\r\n                           }}\r\n                    >\r\n                        <>\r\n                            <option label='' value='' />\r\n                            {\r\n                                skins.map((skin, index) => (\r\n                                        <option key={index} label={skin.replace('.png', '')} value={skin} />\r\n                                    )\r\n                                )\r\n                            }\r\n                        </>\r\n                    </Input>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Eye</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const eye = e.target.value.length > 0 ? `${path}/eyes/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, eye: eye });\r\n                           }}\r\n                    >\r\n                        <>\r\n                            <option label='' value='' />\r\n                            {\r\n                                eyes.map((eye, index) => (\r\n                                        <option key={index} label={eye.replace('.png', '')} value={eye} />\r\n                                    )\r\n                                )\r\n                            }\r\n                        </>\r\n                    </Input>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Mouth</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const mouth = e.target.value.length > 0 ? `${path}/mouths/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, mouth: mouth });\r\n                           }}\r\n                    >\r\n                        {\r\n                            <>\r\n                                <option label='' value='' />\r\n                                {\r\n                                    mouths.map((mouth, index) => (\r\n                                            <option key={index} label={mouth.replace('.png', '')} value={mouth} />\r\n                                        )\r\n                                    )\r\n                                }\r\n                            </>\r\n                        }\r\n                    </Input>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Cloth</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const cloth = e.target.value.length > 0 ? `${path}/cloths/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, cloth: cloth });\r\n                           }}\r\n                    >\r\n                        {\r\n                            clothes.map((cloth, index) => (\r\n                                    <option key={index} label={cloth.replace('.png', '')} value={cloth} />\r\n                                )\r\n                            )\r\n                        }\r\n                    </Input>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Glass</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const glass = e.target.value.length > 0 ? `${path}/glasses/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, glass: glass });\r\n                           }}\r\n                    >\r\n                        {\r\n                            glasses.map((glass, index) => (\r\n                                    <option key={index} label={glass.replace('.png', '')} value={glass} />\r\n                                )\r\n                            )\r\n                        }\r\n                    </Input>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Hair</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const hair = e.target.value.length > 0 ? `${path}/hairs/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, hair: hair });\r\n                           }}\r\n                    >\r\n                        {\r\n                            hairs.map((hair, index) => (\r\n                                    <option key={index} label={hair.replace('.png', '')} value={hair} />\r\n                                )\r\n                            )\r\n                        }\r\n                    </Input>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Hat</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const hat = e.target.value.length > 0 ? `${path}/hats/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, hat: hat });\r\n                           }}\r\n                    >\r\n                        {\r\n                            hats.map((hat, index) => (\r\n                                    <option key={index} label={hat.replace('.png', '')} value={hat} />\r\n                                )\r\n                            )\r\n                        }\r\n                    </Input>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Neck</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const neck = e.target.value.length > 0 ? `${path}/necks/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, neck: neck });\r\n                           }}\r\n                    >\r\n                        {\r\n                            necks.map((neck, index) => (\r\n                                    <option key={index} label={neck.replace('.png', '')} value={neck} />\r\n                                )\r\n                            )\r\n                        }\r\n                    </Input>\r\n                </div>\r\n                <div className=\"mt-10 flex-column\">\r\n                    <h4 className=\"text-white\">Random_Objects</h4>\r\n                    <Input className=\"mt-5\" type=\"select\" name=\"select\" id=\"exampleSelect\"\r\n                           onChange={(e) => {\r\n                               const random_object = e.target.value.length > 0 ? `${path}/random_objects/${e.target.value}` : '';\r\n                               setPenguin({ ...penguin, random_object: random_object });\r\n                           }}\r\n                    >\r\n                        {\r\n                            random_objects.map((random_object, index) => (\r\n                                    <option key={index} label={random_object.replace('.png', '')} value={random_object} />\r\n                                )\r\n                            )\r\n                        }\r\n                    </Input>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex flex-column justify-content-between col-12 col-lg-9 justify-content-center my-30\">\r\n                <div className=\"row min-vh-100\">\r\n                    {\r\n                        penguins.map((item, index) => (\r\n                                <CatalogCard penguin={item} key={index}/>\r\n                            )\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-center my-20\">\r\n                    {\r\n                        pageCount > 1 && (\r\n                            <Pagination count={ pageCount } variant=\"outlined\" shape=\"rounded\"\r\n                                        onChange={(event, value) => {\r\n                                            const offset = (value - 1) * countOnDisplay;\r\n                                            setFilterData({...filterData, offset: offset});\r\n                                            setOverlayText('...Loading');\r\n                                            setIsActivity(true);\r\n                                            catalogFilterPenguin({...filterData, offset: offset}).then(async (result: [Penguin[], number]) => {\r\n                                                setOverlayText('...Loading');\r\n                                                setIsActivity(false);\r\n                                                if(!result) {\r\n                                                    return;\r\n                                                }\r\n                                                setPenguins([...result[0]]);\r\n                                            });\r\n                                        }}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport const NewsPage = () => {\r\n\r\n    return (\r\n        <div className=\"w-100\">\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport UploadIcon from '../../component/uploadIcon';\r\nimport { User } from '../../core/models/user';\r\nimport { lengthOfAddress, reduceTheWalletAddress } from '../../core/utils/wallet';\r\nimport { useUser } from '../../core/context-provider/user/user-context';\r\nimport { getUserByWalletAddress, uploadUser } from '../../core/utils/network/user';\r\nimport { toast } from '../../core/utils/notification.util';\r\nimport { environment } from '../../../environment';\r\n\r\nexport const ProfilePage = () => {\r\n    const initialUserData: User = {\r\n        id: -1,\r\n        userName: '',\r\n        walletAddress: '',\r\n        logoImageName: '',\r\n        logoImage: null,\r\n        favoriteNFTs: [],\r\n    };\r\n    const { walletAddress, token, connectWallet } = useUser();\r\n    const [logoUrl, setLogoUrl] = useState<string>('./images/user.svg');\r\n    const [user, setUser] = useState<User>(initialUserData);\r\n\r\n    useEffect(() => {\r\n        if(walletAddress.length !== lengthOfAddress) {\r\n            setUser(initialUserData);\r\n            // toast('danger', 'Please connect wallet');\r\n        } else {\r\n            getUserByWalletAddress(walletAddress).then((user) => {\r\n                setUser(user);\r\n            });\r\n        }\r\n    }, [walletAddress])\r\n\r\n    const selectLogoImage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.files === null || event.target.files.length === 0) {\r\n            return;\r\n        }\r\n        setLogoUrl(URL.createObjectURL(event.target.files[0]));\r\n        setUser({ ...user, logoImage: event.target.files[0] });\r\n    }\r\n\r\n    const uploadProfile = () => {\r\n        uploadUser(user).then((result) => {\r\n            console.log(result);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex w-100 align-items-center mt-150 flex-column\" style={{ minHeight: '75vh' }}>\r\n            <div className=\"d-flex flex-column justify-content-between bg-dark flex-lg-row border-1 border-radius-10 border-secondary mt-20 p-20\">\r\n                <div className=\"d-flex justify-content-center align-items-center width-100 height-100 border-1 border-radius-10 border-secondary\">\r\n                    <input className=\"position-absolute cursor-pointer width-100 height-100\" style={{ opacity: 0 }}\r\n                           type=\"file\" accept=\"image/*\" onChange={ (event) => selectLogoImage(event) }/>\r\n                    {\r\n                        user.logoImageName.length > 0 ? (\r\n                            <img className=\"border-radius-10 object-fit-cover w-100 h-100\"\r\n                                 src={ `${environment.serverUrl}/user/logo/${ user.logoImageName }` } alt=\"img\"/>\r\n                        ) : (\r\n                            <img className=\"border-radius-10 object-fit-cover w-100 h-100\"\r\n                                 src={ logoUrl } alt=\"img\"/>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex flex-column ml-20\">\r\n                    <div className=\"d-flex flex-column\">\r\n                        <div className=\"d-flex font-17 text-white\">Wallet Address:</div>\r\n                        {\r\n                            walletAddress.length === lengthOfAddress && (\r\n                                <div className=\"font-18 font-weight-bold text-white mt-10\">{ reduceTheWalletAddress(user.walletAddress)}</div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className=\"d-flex flex-column\">\r\n                        <div className=\"font-20 text-white\"> Name: </div>\r\n                        <input\r\n                            className=\"font-15 mt-5 w-100 height-40 bg-dark text-white border-1 border-secondary border-radius-4\"\r\n                            value={user.userName}\r\n                            onChange={(e) => {\r\n                                setUser({...user, userName: e.target.value});\r\n                            }}\r\n                            type=\"text\" placeholder=\"User Name\" name=\"name\"/>\r\n                    </div>\r\n                    {\r\n                        walletAddress.length === lengthOfAddress && (\r\n                            <button className=\"border-radius-4 border-0 w-100 mt-10 bg-success font-14 font-weight-bold text-white p-10\"\r\n                                    onClick={ () => uploadProfile() }>\r\n                                Upload\r\n                            </button>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export const ROUTES = {\r\n  home: '/home',\r\n  market: '/market',\r\n  news: '/news',\r\n  profile: '/your-profile-page',\r\n  favorite: '/favorite',\r\n  subscription: '/subscription',\r\n  create: '/create',\r\n  sell: '/sell',\r\n  collection: '/collection',\r\n  createCollection: '/create-collection',\r\n  mintNFT: '/create-NFT',\r\n  nft: '/nft',\r\n  nftDetail: '/nftDetail',\r\n  doc: '/doc'\r\n}\r\n","import React, { FunctionComponent } from 'react'\nimport { Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-slick';\n\nimport { HotItem } from '../core/models/hot-item';\nimport FavoriteButton from './favorite-button';\nimport { ROUTES } from '../core/data/routes';\n\nexport interface CollectionItemProps {\n  hotItems: HotItem[];\n}\n\nconst CollectionItemSlider: FunctionComponent<CollectionItemProps> = ({ hotItems }) => {\n\n  let hotIemSlider: Slider | null;\n\n  const hotItemSettings = {\n    infinite: true,\n    slidesToShow: 2,\n    speed: 500,\n    dots: false,\n    arrows: false,\n  };\n\n  return (\n    <div>\n        {/**/}\n        <div className=\"d-flex justify-content-between w-100 mt-20 height-50\">\n            <div className=\"d-flex h-100\">\n                <div className=\"border-left-5 border-secondary my-5\"></div>\n                <div className=\"font-32 text-center text-white ml-50\">YOUR COLLECTIONS</div>\n            </div>\n            <div className=\"d-flex width-100 h-100 align-items-center justify-content-between mr-30\">\n                <div className=\"d-flex border-1 border-secondary border-radius-4 text-white\"\n                     onClick={() => {\n                             if (hotIemSlider != null) {\n                                 hotIemSlider.slickPrev();\n                             }\n                         }\n                     }\n                >\n                    <Icon className=\"mr-0\" name=\"angle left\" size=\"big\"/>\n                </div>\n                <div className=\"d-flex border-1 border-secondary border-radius-4 text-white\"\n                     onClick={() => {\n                             if (hotIemSlider != null) {\n                                 hotIemSlider.slickNext();\n                             }\n                         }\n                     }\n                >\n                    <Icon className=\"mr-0\" name=\"angle right\" size=\"big\"/>\n                </div>\n            </div>\n        </div>\n        <Slider ref={c => (hotIemSlider = c)}\n                className=\"d-flex justify-content-between mt-30\" {...hotItemSettings} >\n            {\n                hotItems.map((item, index) => (\n                        <div className=\"d-flex flex-column flex-lg-row w-95 border-1 border-secondary border-radius-3 p-20\" key={index}>\n                            <Link to={{pathname: ROUTES.nft, state: {nftId: item.nftName}}}>\n                                <img className=\"width-240 height-320 border-1 border-radius-5\" src=\"./images/card.jpg\" alt=\"example\"/>\n                            </Link>\n                            <div className=\"d-flex w-100 flex-column justify-content-between text-white ml-20\">\n                                <div className=\"d-flex flex-column\">\n                                    <div className=\"d-flex font-30\"> {item.nftName} </div>\n                                    <span> Category: {item.category} </span>\n                                    <span> Category: {item.category} </span>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <div className=\"d-flex font-30\">{item.nftName}</div>\n                                    <span>Category: {item.category}</span>\n                                    <div className=\"d-flex w-100 height-45 justify-content-between mt-20\">\n                                        <FavoriteButton isFavoritePage={false}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                )\n            }\n        </Slider>\n    </div>\n    )\n  }\n\n  export default CollectionItemSlider\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { useUser } from '../../core/context-provider/user/user-context';\r\nimport { HotItem } from '../../core/models/hot-item';\r\nimport { hotItemData } from '../../core/data/hot-item-data';\r\nimport CollectionItemSlider from '../../component/collection-item-slider';\r\nimport { ROUTES } from '../../core/data/routes';\r\n\r\nexport const CollectionPage = () => {\r\n\r\n    const [hotItems, setHotItems] = useState<HotItem[]>(hotItemData);\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column w-100 bg-primary mt-50 min-vh-100\">\r\n            <div className=\"d-flex justify-content-end w-100 mt-100 height-50\">\r\n                <NavLink activeClassName=\"active\" to={ ROUTES.createCollection }>\r\n                    <button className=\"border-radius-4 border-0 width-150 h-100 bg-success font-14 font-weight-bold text-white\">\r\n                        Create Collection\r\n                    </button>\r\n                </NavLink>\r\n            </div>\r\n\r\n            <CollectionItemSlider hotItems={hotItems}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\n\ninterface UploadProps {\n    className: string;\n}\n\nconst UploadIcon: React.FC<UploadProps> = ({className}) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className={className}\n        fill=\"none\"\n        viewBox=\"0 0 91 83\"\n    >\n        <path\n            fill=\"#686464\"\n            d=\"M86.076 36.047c-2.743-2.788-6.27-4.525-10.092-4.99.025-.586.05-1.149.05-1.736C76.008 13.157 62.853 0 46.663 0c-14.33 0-26.529 10.344-28.93 24.284C7.693 25.702 0 34.384 0 44.654c0 11.348 9.235 20.567 20.6 20.567.245 0 .515 0 .809-.024.245 0 .465.024.686.024h12.002c.956 0 1.715-.758 1.715-1.712 0-.953-.76-1.711-1.715-1.711H22.095c-.196 0-.392 0-.588-.025h-.147c-.294.025-.539.025-.76.025-9.48 0-17.17-7.704-17.17-17.143 0-8.95 6.98-16.459 15.921-17.094l1.396-.098.172-1.394C22.536 13.157 33.608 3.424 46.663 3.424c14.306 0 25.941 11.616 25.941 25.897 0 1.028-.073 2.08-.196 3.106l-.22 1.883 1.886.025c3.625.073 7.005 1.516 9.553 4.108a13.627 13.627 0 013.944 9.635c0 7.581-6.173 13.744-13.767 13.744-.318 0-.661-.024-1.004-.049h-.245c-.318.025-.588.049-.857.049H59.426c-.956 0-1.715.758-1.715 1.712s.76 1.712 1.715 1.712h12.272c.294 0 .637-.025.98-.05.392.025.759.05 1.126.05 9.48 0 17.196-7.704 17.196-17.168 0-4.548-1.74-8.803-4.924-12.032z\"\n        ></path>\n        <path\n            fill=\"#686464\"\n            d=\"M58.764 44.239L45.488 30.984 32.21 44.24a1.725 1.725 0 000 2.421c.662.66 1.764.66 2.425 0l9.137-9.122v43.726c0 .954.76 1.712 1.715 1.712.955 0 1.715-.758 1.715-1.712V37.563l9.136 9.121c.343.343.784.49 1.225.49.44 0 .882-.172 1.225-.49a1.733 1.733 0 00-.025-2.445z\"\n        ></path>\n    </svg>\n);\n\nexport default UploadIcon;\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport UploadIcon from '../../component/uploadIcon';\r\n\r\nexport const CreateCollectionPage = () => {\r\n\r\n    const [loadImage, setLoadImage] = useState(\"\");\r\n    const [uploadFile, setUploadFile] = useState<File>();\r\n\r\n    const selectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if(event.target.files === null || event.target.files.length === 0) {\r\n            return;\r\n        }\r\n        setUploadFile(event.target.files[0]);\r\n        setLoadImage(URL.createObjectURL(event.target.files[0]));\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex w-100 justify-content-center\">\r\n            <div className=\"d-flex flex-column bg-primary mt-120 min-vh-100\">\r\n                <div className=\"text-white font-36\"> Create Collection </div>\r\n                <div className=\"d-flex flex-column justify-content-between flex-lg-row border-1 border-radius-10 border-secondary mt-20 p-20\">\r\n                    <div className=\"d-flex justify-content-center align-items-center width-400 height-400 border-1 border-radius-10 border-secondary\">\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center position-absolute\">\r\n                            <UploadIcon className=\"width-150 height-150\" />\r\n                            <div className=\"font-24 text-white\">\r\n                                Choose Image File\r\n                            </div>\r\n                        </div>\r\n                        <input className=\"position-absolute cursor-pointer width-400 height-400\"\r\n                               style={{ opacity: 0 }}\r\n                               type=\"file\" accept=\"image/*\" onChange={(event) => selectFile(event)}/>\r\n                        <img className=\"border-radius-10 object-fit-cover w-100 h-100\" src={loadImage} alt=\"img\" />\r\n                    </div>\r\n                    <div className=\"d-flex flex-column justify-content-between ml-20\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            <div className=\"font-26 text-white\"> Collection Name </div>\r\n                            <input className=\"font-15 mt-20 w-100 height-40 bg-dark text-white border-1 border-secondary border-radius-7\" type=\"text\" placeholder=\"Collection Name\" name=\"name\"/>\r\n                        </div>\r\n                        <button className=\"border-radius-4 border-0 w-100 height-40 mt-20 bg-success font-14 font-weight-bold text-white\">\r\n                            Create\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {NFT} from \"../../models/nft\";\r\nimport {environment} from \"../../../../environment\";\r\nimport {Penguin} from \"../../models/penguin\";\r\n\r\nexport function mintEvent() {\r\n    return fetch(`${ environment.serverUrl }/penguin/mintEvent`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        method: 'GET',\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function uploadPenguin(penguin: any) {\r\n    if(penguin === undefined) {\r\n        return;\r\n    }\r\n    return fetch(`${ environment.serverUrl }/penguin/penguinUpload`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(penguin),\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function createCollections(size: number) {\r\n    if(size < 0) {\r\n        return;\r\n    }\r\n    const data = {size: size};\r\n    return fetch(`${ environment.serverUrl }/penguin/createCollections`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function getPenguinNotMinted() {\r\n    return fetch(`${ environment.serverUrl }/penguin/getPenguinNotMinted`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        method: 'POST',\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function getPenguinByID(dbIndex: number) {\r\n    if(dbIndex < 0) {\r\n        return;\r\n    }\r\n    const data = {id: dbIndex};\r\n    return fetch(`${ environment.serverUrl }/penguin/getPenguinByID`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n    }).then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response: any) {\r\n    return response.json();\r\n}","import React, { MouseEventHandler, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport {Button, Input} from 'reactstrap';\r\nimport Web3 from 'web3';\r\nimport { create } from 'ipfs-http-client';\r\n\r\nimport {Canvas} from \"../../component/canvas\";\r\nimport {Penguin} from \"../../core/models/penguin\";\r\nimport {getRandomInt} from \"../../core/utils/random\";\r\nimport { backgrounds, clothes, eyes, glasses, hairs, hats, mouths, necks, random_objects, skins } from \"../../core/data/basic-images\";\r\nimport {\r\n    createCollections,\r\n    getPenguinByID,\r\n    getPenguinNotMinted,\r\n    mintEvent,\r\n    uploadPenguin\r\n} from \"../../core/utils/network/penguin\";\r\nimport {useOverlay} from \"../../core/context-provider/loading-overlay/loading-overlay-context\";\r\nimport {toast} from \"../../core/utils/notification.util\";\r\nimport {harmonyPenguinAbi} from \"../../core/data/web3-abi-address/abi\";\r\nimport {harmonyPenguinAddress} from \"../../core/data/web3-abi-address/address\";\r\nimport {useUser} from \"../../core/context-provider/user/user-context\";\r\nimport {ethUnit} from \"../../core/data/ether-unit\";\r\nimport {environment} from \"../../../environment\";\r\nimport {lengthOfAddress} from \"../../core/utils/wallet\";\r\n\r\nconst Buffer = require('buffer/').Buffer;\r\n\r\nconst dbSize = 8888;\r\n\r\nexport const MintNftPage = () => {\r\n\r\n    const ipfs = create({ host: 'ipfs.infura.io', port: 5001, protocol: 'http' });\r\n\r\n    const [generatedPenguin, setGeneratedPenguin] = useState<Penguin>();\r\n    const [price, setPrice] = useState<Number>(0);\r\n    const { setIsActivity, setOverlayText } = useOverlay();\r\n\r\n    const ethereum = window.ethereum;\r\n    const metaWeb3 = new Web3(ethereum);\r\n    const { walletAddress, connectWallet } = useUser();\r\n    const harmonyPenguinContract = new metaWeb3.eth.Contract(harmonyPenguinAbi, harmonyPenguinAddress);\r\n\r\n    useEffect(() => {\r\n        // const tempPenguin: Penguin = createRandomPenguin();\r\n        // setGeneratedPenguin(tempPenguin);\r\n        // createPenguins().then();\r\n        loadPenguinFromDb();\r\n    },[]);\r\n\r\n    const loadPenguinFromDb = () => {\r\n        // setIsActivity(true);\r\n        setOverlayText(\"Loading...\");\r\n        getPenguinNotMinted().then((penguin) => {\r\n            // setIsActivity(false);\r\n            if(penguin.isMinted) {\r\n                loadPenguinFromDb();\r\n            }\r\n            setGeneratedPenguin(penguin);\r\n        });\r\n    }\r\n\r\n    const createRandomPenguin = (): Penguin => {\r\n        const background: string = backgrounds[getRandomInt(backgrounds.length)];\r\n        const skin: string = skins[getRandomInt(skins.length)];\r\n        const eye: string = eyes[getRandomInt(eyes.length)];\r\n        const mouth: string = mouths[getRandomInt(mouths.length)];\r\n        const cloth: string = clothes[getRandomInt(clothes.length)];\r\n        const glass: string = glasses[getRandomInt(glasses.length)];\r\n        const hair: string = hairs[getRandomInt(hairs.length)];\r\n        const hat: string = hats[getRandomInt(hats.length)];\r\n        const neck: string = necks[getRandomInt(necks.length)];\r\n        const random_object: string = random_objects[getRandomInt(random_objects.length)];\r\n\r\n        const path = 'basic_images'\r\n\r\n        const penguin: Penguin = {\r\n            background: `${path}/backgrounds/${background}`,\r\n            skin: `${path}/skins/${skin}`,\r\n            eye: `${path}/eyes/${eye}`,\r\n            mouth: `${path}/mouths/${mouth}`,\r\n            cloth: cloth.length === 0 ? '' : `${path}/clothes/${cloth}`,\r\n            glass: glass.length === 0 ? '' : `${path}/glasses/${glass}`,\r\n            hair: hair.length > 0 && hat.length === 0 ? `${path}/hairs/${hair}` : '',\r\n            hat: hat.length === 0 ? '' : `${path}/hats/${hat}`,\r\n            neck: neck.length === 0 ? '' : `${path}/necks/${neck}`,\r\n            random_object: random_object.length === 0 ? '' : `${path}/random_objects/${random_object}`,\r\n        }\r\n        return penguin;\r\n    }\r\n\r\n    const mintPenguin = async (penguin: Penguin | undefined) => {\r\n        if(price <= 0) {\r\n            toast('danger', 'Please input price.');\r\n            return;\r\n        }\r\n        if(penguin) {\r\n            const background: string = penguin.background;\r\n            const skin: string = penguin.skin;\r\n            const eye: string = penguin.eye;\r\n            const mouth: string = penguin.mouth;\r\n            const cloth: string = penguin.cloth;\r\n            const glass: string = penguin.glass;\r\n            const hair: string = penguin.hair;\r\n            const hat: string = penguin.hat;\r\n            const neck: string = penguin.neck;\r\n            const random_object: string = penguin.random_object;\r\n\r\n            const penguinString: string[] = [];\r\n            penguinString.push(background);\r\n            penguinString.push(skin);\r\n            penguinString.push(eye);\r\n            penguinString.push(mouth);\r\n            penguinString.push(cloth);\r\n            penguinString.push(glass);\r\n            penguinString.push(hair);\r\n            penguinString.push(hat);\r\n            penguinString.push(neck);\r\n            penguinString.push(random_object);\r\n            const tokenPrice = new BigNumber(Number(price.toString())).multipliedBy(ethUnit);\r\n            harmonyPenguinContract.methods.mintPenguin(penguin.id, penguin.tokenURI, tokenPrice, penguinString).send({ from: walletAddress }).then((result: any) => {\r\n                setPrice(0);\r\n                loadPenguinFromDb();\r\n                toast('success', 'Mint success.');\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex w-100 justify-content-center\">\r\n            <div className=\"d-flex flex-column mt-200 min-vh-100\">\r\n                <h1 className=\"text-white\">Generate Penguin</h1>\r\n                <div className=\"d-flex flex-column justify-content-between bg-dark border-1 border-radius-10 border-secondary mt-20 p-20\">\r\n                    <div className=\"d-flex justify-content-center equal width-400 height-400 align-items-center border-1 border-radius-10 border-secondary\">\r\n                        <Canvas penguin={generatedPenguin} className=\"w-100 h-100 border-radius-10\"/>\r\n                    </div>\r\n\r\n                    <Input\r\n                        className=\"mt-20\"\r\n                        color=\"primary\"\r\n                        type=\"number\"\r\n                        placeholder=\"Price\"\r\n                        value={Number(price.toString())}\r\n                        onChange={(e) => {\r\n                            setPrice(Number(e.target.value));\r\n                        }}/>\r\n                    <Button\r\n                        className=\"mt-10\"\r\n                        color=\"primary\"\r\n                        onClick={\r\n                            () => {\r\n                                loadPenguinFromDb();\r\n                            }}>\r\n                        Next\r\n                    </Button>\r\n\r\n                    {\r\n                        walletAddress.length === lengthOfAddress ? (\r\n                            <Button\r\n                                className=\"mt-10\"\r\n                                color=\"success\"\r\n                                onClick={ () => {\r\n                                    // createCollections(8888)?.then((result) => {\r\n                                    //     console.log(result);\r\n                                    // });\r\n\r\n                                    // const json = JSON.stringify(generatedPenguin);\r\n                                    // const buffer = Buffer.from(json);\r\n                                    // setIsActivity(true);\r\n                                    // setOverlayText('...Uploading NFTS');\r\n                                    // ipfs.add(buffer)\r\n                                    // .then((ipfsHash: any) => {\r\n                                    //     uploadPenguin({ hashPath: ipfsHash.path , ...generatedPenguin})?.then((result) => {\r\n                                    //         setIsActivity(false);\r\n                                    //         toast('success', 'Upload Success.');\r\n                                    //         const tempPenguin: Penguin = createRandomPenguin();\r\n                                    //         setGeneratedPenguin(tempPenguin);\r\n                                    //     });\r\n                                    // });\r\n                                    mintPenguin(generatedPenguin).then();\r\n                                }}>\r\n                                Mint\r\n                            </Button>\r\n                        ) : (\r\n                            <Button\r\n                                className=\"mt-10\"\r\n                                color=\"success\"\r\n                                onClick={ () => { connectWallet() }}\r\n                            >\r\n                                Connect Wallet\r\n                            </Button>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export enum SellType {\r\n    None = 0,\r\n    Sell = 1,\r\n    Auction = 2,\r\n}","export const arrNftCategories: string[] = ['Art', 'Video', 'Podcast', 'Sports', 'Tickets', 'Music', 'Gaming'];\r\n\r\nexport const truncateToDecimals = (num: number, dec = 6) => {\r\n    if (!num) {\r\n        return 0;\r\n    }\r\n    const calcDec = Math.pow(10, dec);\r\n    return Math.trunc(num * calcDec) / calcDec;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport { useUser } from '../../core/context-provider/user/user-context';\r\n\r\nimport { ROUTES } from '../../core/data/routes';\r\nimport { toast } from '../../core/utils/notification.util';\r\nimport { isEthNetwork, login } from '../../core/utils/network/user';\r\nimport { getLocalStorageWalletAddress, lengthOfAddress, setLocalStorageWalletStatus } from '../../core/utils/wallet';\r\n\r\nimport '../layout.scss';\r\nimport { RouteItem } from '../../core/models/route';\r\nimport { Search } from '../../core/models/search';\r\nimport { arrNftCategories } from '../../core/utils/category';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        ethereum: any;\r\n    }\r\n}\r\n\r\nexport const Header = () => {\r\n\r\n    const arrCategory: string[] = ['All Category'].concat(arrNftCategories);\r\n    const [category, setCategory] = useState('All Category');\r\n\r\n    const { walletAddress, setWalletAddress, setToken, connectWallet } = useUser();\r\n    const [searchData, setSearchData] = useState<Search>({\r\n        keyWord: '',\r\n        category: arrNftCategories,\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadWallet().then();\r\n    },[]);\r\n\r\n    const mainPages: RouteItem[] = [\r\n        {\r\n            name: 'MARKET PLACE',\r\n            route: ROUTES.market\r\n        }, {\r\n            name: 'MINT',\r\n            route: ROUTES.mintNFT\r\n        }\r\n        // {\r\n        //     name: 'HOME',\r\n        //     route: ROUTES.home\r\n        // }, {\r\n        //     name: 'CATALOG',\r\n        //     route: ROUTES.catalog\r\n        // }, {\r\n        //     name: 'NEWS',\r\n        //     route: ROUTES.news\r\n        // }, {\r\n        //     name: 'YOUR PROFILE',\r\n        //     route: ROUTES.profile\r\n        // }, {\r\n        //     name: 'FAVORITES',\r\n        //     route: ROUTES.favorite\r\n        // }, {\r\n        //     name: 'SUBSCRIPTION',\r\n        //     route: ROUTES.subscription\r\n        // }, {\r\n        //     name: 'CREATE',\r\n        //     route: ROUTES.createNFT\r\n        // }, {\r\n        //     name: 'SELL',\r\n        //     route: ROUTES.sell\r\n        // }\r\n    ];\r\n\r\n    const disconnectWallet = () => {\r\n        setWalletAddress('');\r\n        setLocalStorageWalletStatus('').then();\r\n    }\r\n\r\n    const loadWallet = async () => {\r\n        if (!await isEthNetwork()) {\r\n            setWalletAddress('');\r\n            return;\r\n        }\r\n        if(getLocalStorageWalletAddress() !== '') {\r\n            setWalletAddress(getLocalStorageWalletAddress());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__wrap\">\r\n                <div className=\"d-flex flex-column justify-content-center height-70\">\r\n                    <div className=\"d-none d-lg-flex\">\r\n                        <div className=\"d-flex w-100 h-100 justify-content-between\">\r\n                            <div className=\"d-flex w-100 h-100 justify-content-around\">\r\n                                <div>\r\n                                    {\r\n                                        mainPages.map((page: RouteItem, index) => (\r\n                                            <NavLink activeClassName=\"active\" className=\"ml-50\" to={ page.route } key={ index }>\r\n                                                <span className=\"font-weight-bold\">{ page.name }</span>\r\n                                            </NavLink>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                <div className=\"ml-40\">\r\n                                    {\r\n                                        walletAddress.length === lengthOfAddress ? (\r\n                                            <button className=\"min-width-135 btn btn-danger\"\r\n                                                    onClick={ () => disconnectWallet() }>Disconnect Wallet</button>\r\n                                        ) : (\r\n                                            <button className=\"min-width-135 btn btn-danger\"\r\n                                                    onClick={ () => connectWallet() }>Connect Wallet</button>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport BeatLoader from 'react-spinners/BeatLoader'\r\nimport LoadingOverlay from 'react-loading-overlay-ts';\r\n\r\nimport { Header } from './header/header';\r\nimport { Footer } from './footer/footer';\r\nimport { useOverlay } from '../core/context-provider/loading-overlay/loading-overlay-context';\r\n\r\nexport const Layout = (props: React.PropsWithChildren<{}>) => {\r\n    const { isActivity, overlayText } = useOverlay();\r\n\r\n    return (\r\n        <LoadingOverlay\r\n            active={ isActivity }\r\n            spinner={\r\n                <div className=\"d-flex flex-column\">\r\n                    <BeatLoader size={ 60 } color='white' />\r\n                    <h3>\r\n                        { overlayText }\r\n                    </h3>\r\n                </div>\r\n            }\r\n            className=\"d-flex flex-column bg-info\">\r\n            <Header/>\r\n            <div className=\"d-flex container\">\r\n                { props.children }\r\n            </div>\r\n            {/*<Footer />*/}\r\n        </LoadingOverlay>\r\n    );\r\n}\r\n","import React, { FunctionComponent } from 'react'\nimport { Icon } from 'semantic-ui-react';\nimport { Link, NavLink } from 'react-router-dom';\nimport Slider from 'react-slick';\n\nimport { HotItem } from '../core/models/hot-item';\nimport FavoriteButton from './favorite-button';\nimport { ROUTES } from '../core/data/routes';\n\nexport interface NftItemProps {\n  hotItems: HotItem[];\n}\n\nconst NftItemSlider: FunctionComponent<NftItemProps> = ({ hotItems }) => {\n\n  let hotIemSlider: Slider | null;\n\n  const hotItemSettings = {\n    infinite: true,\n    slidesToShow: 2,\n    speed: 500,\n    dots: false,\n    arrows: false,\n  };\n\n  return (\n    <div>\n        {/**/}\n        <div className=\"d-flex justify-content-between w-100 mt-20 height-50\">\n            <div className=\"d-flex h-100\">\n                <div className=\"border-left-5 border-secondary my-5\"></div>\n                <div className=\"font-32 text-center text-white ml-50\">YOUR NFTS</div>\n            </div>\n            <div className=\"d-flex width-100 h-100 align-items-center justify-content-between mr-30\">\n                <div className=\"d-flex border-1 border-secondary border-radius-4 text-white\"\n                     onClick={() => {\n                             if (hotIemSlider != null) {\n                                 hotIemSlider.slickPrev();\n                             }\n                         }\n                     }\n                >\n                    <Icon className=\"mr-0\" name=\"angle left\" size=\"big\"/>\n                </div>\n                <div className=\"d-flex border-1 border-secondary border-radius-4 text-white\"\n                     onClick={() => {\n                             if (hotIemSlider != null) {\n                                 hotIemSlider.slickNext();\n                             }\n                         }\n                     }\n                >\n                    <Icon className=\"mr-0\" name=\"angle right\" size=\"big\"/>\n                </div>\n            </div>\n        </div>\n        <Slider ref={c => (hotIemSlider = c)}\n                className=\"d-flex justify-content-between mt-30\" {...hotItemSettings} >\n            {\n                hotItems.map((item, index) => (\n                        <div className=\"d-flex flex-column flex-lg-row w-95 border-1 border-secondary border-radius-3 p-20\" key={index}>\n                            <Link to={{pathname: '/nftDetail', state: {nftId: item.nftName}}}>\n                                <img className=\"width-240 height-320 border-1 border-radius-5\" src=\"./images/card.jpg\" alt=\"example\"/>\n                            </Link>\n                            <div className=\"d-flex w-100 flex-column justify-content-between text-white ml-20\">\n                                <div className=\"d-flex flex-column\">\n                                    <div className=\"d-flex font-30\"> {item.nftName} </div>\n                                    <span> Category: {item.category} </span>\n                                    <span> Category: {item.category} </span>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <div className=\"d-flex font-30\">{item.nftName}</div>\n                                    <span>Category: {item.category}</span>\n                                    <div className=\"d-flex w-100 height-45 justify-content-between mt-20\">\n                                        <NavLink activeClassName=\"active\" to={ ROUTES.mintNFT }>\n                                            <button className=\"border-radius-4 border-0 width-150 h-100 bg-success font-14 font-weight-bold text-white\">\n                                                Create NFT\n                                            </button>\n                                        </NavLink>\n                                        <FavoriteButton isFavoritePage={ false }/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                )\n            }\n        </Slider>\n    </div>\n    )\n  }\n\n  export default NftItemSlider\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport NftItemSlider from '../../component/nft-item-slider';\r\nimport { HotItem } from '../../core/models/hot-item';\r\nimport { hotItemData } from '../../core/data/hot-item-data';\r\nimport { ROUTES } from '../../core/data/routes';\r\n\r\nexport const NftPage = () => {\r\n\r\n    const [hotItems, setHotItems] = useState<HotItem[]>(hotItemData);\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column w-100 bg-primary mt-50 min-vh-100\">\r\n            <div className=\"d-flex justify-content-end w-100 mt-100 height-50\">\r\n                <NavLink activeClassName=\"active\" to={ ROUTES.mintNFT }>\r\n                    <button className=\"border-radius-4 border-0 width-150 h-100 bg-success font-14 font-weight-bold text-white\">\r\n                        Create NFT\r\n                    </button>\r\n                </NavLink>\r\n            </div>\r\n\r\n            <NftItemSlider hotItems={hotItems}/>\r\n        </div>\r\n    );\r\n}\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport { CatalogCard } from '../../component/catalog-card';\r\nimport { NFT } from '../../core/models/nft';\r\n\r\nexport interface category {\r\n    name: string;\r\n    value: boolean;\r\n}\r\n\r\nexport const FavoritePage = () => {\r\n\r\n    const [arrFavoriteNft, setArrFavoriteNft] = useState<NFT[]>([]);\r\n    const [priceRange, setPriceRange] = useState([0, 100]);\r\n    const [categories, setCategories] =\r\n        useState<category[]>([\r\n            { name: 'Art', value: false },\r\n            { name: 'Video', value: false },\r\n            { name: 'Podcast', value: false },\r\n            { name: 'Sports', value: false },\r\n            { name: 'Tickets', value: false },\r\n            { name: 'Music', value: false },\r\n            { name: 'Gaming', value: false },\r\n        ]);\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column flex-lg-row w-100 mt-200 border-1 border-secondary justify-content-between\">\r\n            <div className=\"d-flex flex-column col-12 col-lg-3 p-30\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <h4 className=\"text-white\">Filters</h4>\r\n                    <button className=\"border-0 bg-primary text-secondary\">Clear All</button>\r\n                </div>\r\n                <div className=\"d-flex flex-column justify-content-between mt-20\">\r\n                    <div className=\"font-15 text-white\">Key Word:</div>\r\n                    <input\r\n                        className=\"font-15 mt-5 w-100 height-40 bg-dark text-white border-1 border-white border-radius-4 mt-10\"\r\n                        type=\"number\" placeholder=\"Royalty\" name=\"name\"/>\r\n                </div>\r\n                <div className=\"d-flex flex-column justify-content-between mt-20\">\r\n                    <div className=\"font-15 text-white\">Sort by:</div>\r\n                    <input\r\n                        className=\"font-15 mt-5 w-100 height-40 bg-dark text-white border-1 border-white border-radius-4 mt-10\"\r\n                        type=\"number\" placeholder=\"Royalty\" name=\"name\"/>\r\n                </div>\r\n                <div className=\"d-flex flex-column justify-content-between mt-20\">\r\n                    <div className=\"font-15 text-white\">Price:</div>\r\n                    <Slider\r\n                        value={ priceRange }\r\n                        onChange={ (event, newValue: number | number[]) => {\r\n                            if (typeof newValue === 'number') {\r\n                                return;\r\n                            }\r\n                            setPriceRange([newValue[0], newValue[1]])\r\n                        }\r\n                        }\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                    />\r\n                </div>\r\n                <div className=\"d-flex flex-column justify-content-between mt-20\">\r\n                    <div className=\"font-15 text-white mb-10\">Category:</div>\r\n                    {\r\n                        categories.map((item: category, index: number) => (\r\n                            <FormControlLabel\r\n                                className=\"text-white font-24\"\r\n                                key={ index }\r\n                                label={ item.name }\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={ item.value }\r\n                                        style={ { color: '#a782e9' } }\r\n                                        onChange={ (event: ChangeEvent<HTMLInputElement>) => {\r\n                                            categories[index].value = event.target.checked;\r\n                                            setCategories([...categories]);\r\n                                        } }\r\n                                    />\r\n                                }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <button\r\n                    className=\"font-15 mt-5 w-100 height-40 bg-dark text-white border-1 border-white border-radius-4 mt-10\"\r\n                    placeholder=\"Royalty\" name=\"name\">\r\n                    Apply Filter\r\n                </button>\r\n            </div>\r\n            <div className=\"col-12 col-lg-9 row justify-content-center my-30\">\r\n                {\r\n                    arrFavoriteNft.map((item, index) => (\r\n                            <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-10\" key={ index }>\r\n                                {/*<CatalogCard nftItem={ item } key={ index } isFavoritePage={ true }/>*/}\r\n                            </div>\r\n                        )\r\n                    )\r\n                }\r\n                <div className=\"d-flex justify-content-between my-20\">\r\n                    <div>\r\n\r\n                    </div>\r\n                    <Pagination count={ 10 } variant=\"outlined\" shape=\"rounded\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { environment } from '../../../../environment';\r\nimport { NFT } from '../../models/nft';\r\n\r\nexport function getNftById(id: string) {\r\n    return fetch(`${ environment.serverUrl }/nft/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            //     // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            // 'Authorization': `Bearer ${token}`\r\n        },\r\n        method: 'GET',\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function updateSellTypeOfNFT(id: string, sellType: string) {\r\n    const data = { sellType: sellType };\r\n    return fetch(`${ environment.serverUrl }/nft/sell-type/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function updatePriceOfNFT(id: string, sellType: string, price: number) {\r\n    const data = { sellType: sellType, price: price };\r\n    return fetch(`${ environment.serverUrl }/nft/update/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function updateOwnerOfNFT(id: string, owner: string) {\r\n    const data = { owner: owner };\r\n    return fetch(`${ environment.serverUrl }/nft/owner/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n    }).then(handleResponse)\r\n}\r\n\r\nexport function addOrRemoveFavorite(nftId: number, walletAddress: string, status: boolean) {\r\n    const data = {\r\n        nftId: nftId,\r\n        walletAddress: walletAddress,\r\n        status: status,\r\n    };\r\n    return fetch(`${ environment.serverUrl }/nft/favorites`, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n    }).then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response: any) {\r\n    return response.json();\r\n}","export function formatTime(time: number) {\r\n    const hours = Math.floor(time / 3600);\r\n    const minutes = Math.floor((time - (hours * 3600)) / 60);\r\n    const seconds = time - (hours * 3600) - (minutes * 60);\r\n    return `${ hours < 10 ? ('0' + hours) : hours } : ${ minutes < 10 ? ('0' + minutes) : minutes } : ${ seconds < 10 ? ('0' + seconds) : seconds }`;\r\n}\r\n","import React, { ChangeEvent, FunctionComponent, useEffect, useState } from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { CatalogCard, CatalogCardProps } from '../../component/catalog-card';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { catalogFilterPenguin } from '../../core/utils/network/catalog';\r\nimport { NFT } from '../../core/models/nft';\r\nimport { environment } from '../../../environment';\r\nimport { Link } from 'react-router-dom';\r\nimport { useUser } from '../../core/context-provider/user/user-context';\r\nimport {\r\n    addOrRemoveFavorite,\r\n    getNftById,\r\n    updateOwnerOfNFT,\r\n    updatePriceOfNFT,\r\n    updateSellTypeOfNFT\r\n} from '../../core/utils/network/nft-detail';\r\nimport { toast } from '../../core/utils/notification.util';\r\nimport { erc721Abi, escrowAbi, treasuryAbi } from '../../core/data/web3-abi-address/abi';\r\nimport { erc721Address, escrowAddress, treasuryAddress } from '../../core/data/web3-abi-address/address';\r\nimport { ethUnit } from '../../core/data/ether-unit';\r\nimport Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\nimport LoadingOverlay from 'react-loading-overlay-ts';\r\nimport { SellType } from '../../core/enum/sell-type';\r\nimport { lengthOfAddress, reduceTheWalletAddress } from '../../core/utils/wallet';\r\nimport FavoriteButton from '../../component/favorite-button';\r\nimport { Favorite as FavoriteIcon, FavoriteBorder } from '@material-ui/icons';\r\nimport { Favorite } from '../../core/models/favorite';\r\nimport { formatTime } from '../../core/utils/network/time';\r\nimport { truncateToDecimals } from '../../core/utils/category';\r\n\r\nexport interface NftDetailPageProps {\r\n    item: NFT;\r\n    match: any\r\n}\r\n\r\nexport const NftDetailPage: FunctionComponent<NftDetailPageProps> = (props) => {\r\n\r\n    const nftInitialData = {\r\n        id: '',\r\n        nftName: '',\r\n        creator: '',\r\n        owner: '',\r\n        category: '',\r\n        royalty: 0,\r\n        description: '',\r\n        sellType: '',\r\n        price: 0,\r\n        logoImageName: '',\r\n        nftFileName: '',\r\n        logoImage: null,\r\n        nftFile: null,\r\n        countOfFavorites: 0,\r\n    };\r\n    const { walletAddress, token, connectWallet } = useUser();\r\n\r\n    const[nftItem, setNftItem] = useState<NFT>(nftInitialData);\r\n    const[isOwner, setIsOwner] = useState<boolean>(false);\r\n    const[favorite, setFavorite] = useState<Favorite>({\r\n        isFavorite: false,\r\n        countOfUsers: 0,\r\n    });\r\n    const [sellType, setSellType] = useState<number>(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [bidPrice, setBidPrice] = useState<number>(0);\r\n    const [auctionDuration, setAuctionDuration] = useState<number>(0);\r\n    const ethereum = window.ethereum;\r\n    const web3 = new Web3(ethereum);\r\n    const ropstenWeb3 = new Web3(new Web3.providers.HttpProvider(environment.ropstenNetworkUrl));\r\n\r\n    useEffect(() => {\r\n        const param = props.match.params;\r\n        if(param.id === '') {\r\n            return;\r\n        }\r\n        getNftById(param.id).then((nft) => {\r\n            if (!nft) {\r\n                return;\r\n            }\r\n            setNftItem(nft);\r\n            loadSellTypeOfNFT(nft.id);\r\n        });\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        const param = props.match.params;\r\n        if(walletAddress.length === lengthOfAddress && parseInt(param.id) > -1)\r\n        {\r\n            addOrRemoveFavorite(parseInt(param.id), walletAddress, true).then((result) => {\r\n                setFavorite({ ...favorite, isFavorite: result.isFavorite, countOfUsers: result.countOfUsers });\r\n            });\r\n        }\r\n        if(nftItem.owner === walletAddress) {\r\n            setIsOwner(true);\r\n        } else {\r\n            setIsOwner(false);\r\n        }\r\n    }, [nftItem, walletAddress]);\r\n\r\n    useEffect(() => {\r\n        let intervalId: NodeJS.Timeout;\r\n        let isSubscribed = true;\r\n\r\n        intervalId = setInterval(() => {\r\n            if(auctionDuration > 0){\r\n                setAuctionDuration(auctionDuration - 1);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n            isSubscribed = false;\r\n        }\r\n    }, [auctionDuration])\r\n\r\n    const loadSellTypeOfNFT = (id: number) => {\r\n        const escrowContract = new ropstenWeb3.eth.Contract(escrowAbi, escrowAddress);\r\n        const treasuryContract = new ropstenWeb3.eth.Contract(treasuryAbi, treasuryAddress);\r\n        const erc721Contract = new ropstenWeb3.eth.Contract(erc721Abi, erc721Address);\r\n        erc721Contract.methods.tokenStatus(id).call().then((status: any) => {\r\n            setSellType(parseInt(status));\r\n            if(parseInt(status) === SellType.Auction) {\r\n                escrowContract.methods.getFinalPrice(id).call().then((finalPrice: number) => {\r\n                    setBidPrice(truncateToDecimals(finalPrice / ethUnit));\r\n                });\r\n                treasuryContract.methods.auctionDuration(id).call().then((duration: number) => {\r\n                    const currentTime = new Date();\r\n                    let remainingTime = 0;\r\n                    if (duration * 1000 - currentTime.getTime() < 0) {\r\n                        remainingTime = 0;\r\n                    } else {\r\n                        remainingTime = Math.floor((duration * 1000 - currentTime.getTime()) / 1000);\r\n                    }\r\n                    setAuctionDuration(remainingTime);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const setOnAuction = () => {\r\n        const treasuryContract = new web3.eth.Contract(treasuryAbi, treasuryAddress);\r\n        treasuryContract.methods.setOnAuction(nftItem.id, new BigNumber(nftItem.price * ethUnit), 14400).send({from: walletAddress})\r\n            .on('error', function (error: any) {\r\n                console.log(error);\r\n            })\r\n            .on('confirmation', async () => {\r\n                updateSellTypeOfNFT(nftItem.id, 'Auction').then((result) => {\r\n                    setIsLoading(false);\r\n                    loadSellTypeOfNFT(parseInt(nftItem.id));\r\n                    if(!result) {\r\n                        return;\r\n                    }\r\n                    setNftItem(result);\r\n                    toast('success', 'Nft was set on sale.');\r\n                });\r\n            });\r\n    }\r\n\r\n    const finishAuction = () => {\r\n        const treasuryContract = new web3.eth.Contract(treasuryAbi, treasuryAddress);\r\n        setIsLoading(true);\r\n        treasuryContract.methods.finishAuction(nftItem.id).send({from: walletAddress})\r\n            .on('error', function (error: any) {\r\n                console.log(error);\r\n                setIsLoading(false);\r\n            })\r\n            .on('confirmation', async () => {\r\n                updateSellTypeOfNFT(nftItem.id, '').then((result) => {\r\n                    setIsLoading(false);\r\n                    loadSellTypeOfNFT(parseInt(nftItem.id));\r\n                    if(!result) {\r\n                        return;\r\n                    }\r\n                    setNftItem(result);\r\n                    toast('success', 'Nft was set on sale.');\r\n                });\r\n            });\r\n    }\r\n\r\n    const setOnSale = () => {\r\n        const treasuryContract = new web3.eth.Contract(treasuryAbi, treasuryAddress);\r\n        setIsLoading(true);\r\n        treasuryContract.methods.setOnSale(nftItem.id, new BigNumber(nftItem.price * ethUnit)).send({from: walletAddress})\r\n            .on('error', function (error: any) {\r\n                console.log(error);\r\n                setIsLoading(false);\r\n            })\r\n            .on('confirmation', async () => {\r\n                updateSellTypeOfNFT(nftItem.id, 'Sell').then((result) => {\r\n                    setIsLoading(false);\r\n                    loadSellTypeOfNFT(parseInt(nftItem.id));\r\n                    if(!result) {\r\n                        return;\r\n                    }\r\n                    setNftItem(result);\r\n                    toast('success', 'Nft was set on sale.');\r\n                });\r\n            });\r\n    }\r\n\r\n    const cancelOnSale = () => {\r\n        const treasuryContract = new web3.eth.Contract(treasuryAbi, treasuryAddress);\r\n        setIsLoading(true);\r\n        treasuryContract.methods.cancelOnSale(nftItem.id).send({from: walletAddress})\r\n            .on('error', function (error: any) {\r\n                console.log(error);\r\n                setIsLoading(false);\r\n            })\r\n            .on('confirmation', async () => {\r\n                updateSellTypeOfNFT(nftItem.id, '').then((result) => {\r\n                    setIsLoading(false);\r\n                    loadSellTypeOfNFT(parseInt(nftItem.id));\r\n                    if(!result) {\r\n                        return;\r\n                    }\r\n                    setNftItem(result);\r\n                    toast('success', 'Nft was set on sale.');\r\n                });\r\n            });\r\n    }\r\n\r\n    const onTokenBuy = () => {\r\n        const treasuryContract = new web3.eth.Contract(treasuryAbi, treasuryAddress);\r\n        setIsLoading(true);\r\n        treasuryContract.methods.buyToken(nftItem.id).send({from: walletAddress, value:nftItem.price * ethUnit})\r\n            .on('error', function (error: any) {\r\n                setIsLoading(false);\r\n                console.log(error);\r\n            })\r\n            .on('confirmation', async () => {\r\n                updateOwnerOfNFT(nftItem.id, walletAddress).then((result => {\r\n                    setIsLoading(false);\r\n                    loadSellTypeOfNFT(parseInt(nftItem.id));\r\n                    if(result) {\r\n                        toast('success', 'Transaction sent successfully.');\r\n                        setNftItem(result);\r\n                    }\r\n                }));\r\n            });\r\n    }\r\n\r\n    const onTokenBid = () => {\r\n        if(bidPrice > nftItem.price) {\r\n            const treasuryContract = new web3.eth.Contract(treasuryAbi, treasuryAddress);\r\n            const escrowContract = new ropstenWeb3.eth.Contract(escrowAbi, escrowAddress);\r\n            treasuryContract.methods.bidOnAuction(nftItem.id).send({from: walletAddress, value:bidPrice * ethUnit})\r\n                .on('error', function (error: any) {\r\n                    console.log(error);\r\n                })\r\n                .on('confirmation', async () => {\r\n                    escrowContract.methods.getFinalPrice(nftItem.id).call().then((finalPrice: number) => {\r\n                        setBidPrice(truncateToDecimals(finalPrice / ethUnit));\r\n                    });\r\n                });\r\n        } else {\r\n            toast('danger', 'New bid price is higher than old price.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column flex-lg-row w-100 mt-200 border-1 border-secondary justify-content-between\" style={{ minHeight: '70vh' }}>\r\n            <div className=\"d-flex col-12 col-lg-9 justify-content-center my-30\">\r\n                {\r\n                    nftItem.logoImageName !== '' && nftItem.logoImageName && (\r\n                        <img className=\"border-1 h-100 border-radius-5\" src={ `${environment.serverUrl}/nft/logo/${nftItem?.logoImageName}` } alt=\"example\"/>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"d-flex flex-column justify-content-between col-12 col-lg-3 my-30\">\r\n                <div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <h2 className=\"text-white\">{nftItem?.nftName}</h2>\r\n                        <FormControlLabel\r\n                            className=\"d-flex align-items-center text-white h-100 ml-0 mr-0\"\r\n                            label={ favorite.countOfUsers }\r\n                            labelPlacement=\"start\"\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={ favorite.isFavorite }\r\n                                    icon={<FavoriteBorder color={\"primary\"} />}\r\n                                    checkedIcon={<FavoriteIcon />} name=\"checkedH\"\r\n                                    onChange={ (event: ChangeEvent<HTMLInputElement>) => {\r\n                                        addOrRemoveFavorite(parseInt(nftItem.id), walletAddress, false).then((result) => {\r\n                                            setFavorite(result);\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            }\r\n\r\n                        />\r\n                   </div>\r\n                    <div className=\"d-flex font-17 align-items-center text-white mt-20\">\r\n                        <div className=\"d-flex font-17 text-white\">Price:</div>\r\n                        <div className=\"ml-10 font-18 font-weight-bold text-white\">{nftItem.price} ETH</div>\r\n                    </div>\r\n                    <div className=\"d-flex font-17 align-items-center text-white\">\r\n                        <div className=\"d-flex font-17 text-white\">Creator:</div>\r\n                        <div className=\"ml-10 font-18 font-weight-bold text-white\">{reduceTheWalletAddress(nftItem.creator)}</div>\r\n                    </div>\r\n                    <div className=\"d-flex font-17 align-items-center text-white\">\r\n                        <div className=\"d-flex font-17 text-white\">Owner:</div>\r\n                        <div className=\"ml-10 font-18 font-weight-bold text-white\">{reduceTheWalletAddress(nftItem.owner)}</div>\r\n                    </div>\r\n                    <div className=\"d-flex font-17 align-items-center text-white\">\r\n                        <div className=\"d-flex font-17 text-white\">Sell Type:</div>\r\n                        <div className=\"ml-10 font-18 font-weight-bold text-white\">{nftItem.sellType}</div>\r\n                    </div>\r\n                    <div className=\"d-flex font-17 align-items-center text-white\">\r\n                        <div className=\"d-flex font-17 text-white\">Category:</div>\r\n                        <div className=\"ml-10 font-18 font-weight-bold text-white\">{nftItem.category}</div>\r\n                    </div>\r\n                    <div className=\"mt-30 font-15 text-white\">Description:</div>\r\n                    <div className=\"font-15 text-white bg-dark border-1 border-radius-3 border-white\"> {nftItem.description}</div>\r\n                </div>\r\n                {\r\n                    walletAddress.length === lengthOfAddress ? (\r\n                        <div>\r\n                            {\r\n                                sellType === SellType.Auction && (\r\n                                    <div className=\"d-flex font-17 align-items-center text-white\">\r\n                                        <div className=\"d-flex font-17 text-white\">Auction ends in:</div>\r\n                                        <div className=\"ml-10 font-18 font-weight-bold text-white\">{ formatTime(auctionDuration) }</div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                isOwner ? (\r\n                                    <div>\r\n                                        {\r\n                                            sellType === SellType.None && (\r\n                                                <div>\r\n                                                    <button className=\"border-radius-4 border-0 w-100 height-40 mt-20 bg-success font-14 font-weight-bold text-white\"\r\n                                                            onClick={() => setOnAuction()}>\r\n                                                        Set On Auction.\r\n                                                    </button>\r\n                                                    <button className=\"border-radius-4 border-0 w-100 height-40 mt-20 bg-success font-14 font-weight-bold text-white\"\r\n                                                            onClick={() => setOnSale()}>\r\n                                                        Set On Sale.\r\n                                                    </button>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            sellType === SellType.Sell && (\r\n                                                <button className=\"border-radius-4 border-0 w-100 height-40 mt-20 bg-success font-14 font-weight-bold text-white\"\r\n                                                        onClick={() => cancelOnSale()}>\r\n                                                    Cancel On Sale.\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            sellType === SellType.Auction && (\r\n                                                <button className=\"border-radius-4 border-0 w-100 height-40 mt-20 bg-success font-14 font-weight-bold text-white\"\r\n                                                        onClick={() => finishAuction()}>\r\n                                                    Finish On Auction.\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                ) : (\r\n                                    <div>\r\n                                        {\r\n                                            sellType === SellType.Sell && (\r\n                                                <button className=\"border-radius-4 border-0 w-100 height-40 mt-20 bg-success font-14 font-weight-bold text-white\"\r\n                                                        onClick={() => onTokenBuy()}\r\n                                                >\r\n                                                    Buy\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            sellType === SellType.Auction && (\r\n                                                <div>\r\n                                                    <input className=\"font-15 mt-5 w-100 height-40 bg-dark text-white border-1 border-white border-radius-4\"\r\n                                                           value={bidPrice}\r\n                                                           onChange={ (e) => {\r\n                                                               const value: string = e.target.value;\r\n                                                               setBidPrice(parseFloat(value));\r\n                                                           } }\r\n                                                           type=\"number\" placeholder=\"Price\" name=\"name\"/>\r\n                                                    <button className=\"border-radius-4 border-0 w-100 height-40 mt-20 bg-success font-14 font-weight-bold text-white\"\r\n                                                            onClick={() => onTokenBid()}\r\n                                                    >\r\n                                                        Bid\r\n                                                    </button>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <button className=\"border-radius-4 border-0 w-100 height-40 mt-20 bg-success font-14 font-weight-bold text-white\"\r\n                                    onClick={() => connectWallet()}\r\n                            >\r\n                                Connect Wallet\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport const DocPage = () => {\r\n\r\n    return (\r\n        <div className=\"w-100\">\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\nimport ReactNotification from 'react-notifications-component'\nimport { Route, Switch, Redirect, BrowserRouter as Router } from 'react-router-dom';\nimport { LoadingOverlayProvider } from './core/context-provider/loading-overlay/loading-overlay-provider';\n\nimport { UserProvider } from './core/context-provider/user/user-provider';\nimport { HomePage } from './pages/home-page/home-page';\nimport { CatalogPage } from './pages/catalog-page/catalog-page';\nimport { NewsPage } from './pages/news-page/news-page';\nimport { ProfilePage } from './pages/your-profile-page/profile-page';\nimport { CollectionPage } from './pages/collection-page/collection-page';\nimport { CreateCollectionPage } from './pages/create-collection-page/create-collection-page';\nimport { MintNftPage } from './pages/mint-nft-page/mint-nft-page';\nimport { Layout } from './layout/layout';\nimport { NftPage } from './pages/nft-page/nft-page';\nimport { FavoritePage } from \"./pages/favorite-page/favorite-page\";\nimport { NftDetailPage } from './pages/nft-detail-page/nft-detail-page';\nimport { DocPage } from './pages/doc-page/doc-page';\n\nimport { ROUTES } from './core/data/routes';\n\nimport 'react-notifications-component/dist/theme.css'\nimport {bscNetworkChainId} from \"./core/utils/network/user\";\nimport {environment} from \"../environment\";\n\nfunction App() {\n\n    const ethereum = window.ethereum;\n\n    useEffect(() => {\n        switchNetwork().then();\n    }, [])\n\n    const switchNetwork = async () => {\n        try {\n            await ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: bscNetworkChainId }],\n            });\n        } catch (switchError) {\n            // This error code indicates that the chain has not been added to MetaMask.\n            if (switchError.code === 4902) {\n                try {\n                    await ethereum.request({\n                        chainName: 'Harmony Test net',\n                        method: 'wallet_addEthereumChain',\n                        params: [{ chainId: bscNetworkChainId, rpcUrl: environment.ropstenNetworkUrl }],\n                    });\n                } catch (addError) {\n                    // handle \"add\" error\n                }\n            }\n            // handle other \"switch\" errors\n        }\n    }\n\n    return (\n        <UserProvider>\n            <ReactNotification/>\n            <Router>\n                <LoadingOverlayProvider>\n                    <Layout>\n                        <Switch>\n                            <Redirect exact from=\"/\" to={ ROUTES.market }/>\n                            <Route exact path={ `${ ROUTES.home }` } component={ HomePage }/>\n                            <Route exact path={ `${ ROUTES.market }` } component={ CatalogPage }/>\n                            <Route exact path={ `${ ROUTES.news }` } component={ NewsPage }/>\n                            <Route exact path={ `${ ROUTES.profile }` } component={ ProfilePage }/>\n                            <Route exact path={ `${ ROUTES.collection }` } component={ CollectionPage }/>\n                            <Route exact path={ `${ ROUTES.nft }` } component={ NftPage }/>\n                            <Route exact path={ `${ ROUTES.mintNFT }` } component={ MintNftPage }/>\n                            <Route exact path={ `${ ROUTES.favorite }` } component={ FavoritePage }/>\n                            <Route exact path={ `${ ROUTES.createCollection }` } component={ CreateCollectionPage }/>\n                            <Route exact path={ `${ ROUTES.nftDetail }/:id` } component={ NftDetailPage }/>\n                            <Route exact path={ `${ ROUTES.doc }` } component={ DocPage }/>\n                        </Switch>\n                    </Layout>\n                </LoadingOverlayProvider>\n            </Router>\n        </UserProvider>\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './style.scss';\nimport './assets/main.css';\n\nReactDOM.render(\n    // <React.StrictMode>\n        <App/>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}